
       ‚ñì‚ñà‚ñà‚ñì‚ñÑ
    ‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñì‚ñà‚ñì‚ñÑ
     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí
          ‚ñÄ‚ñì‚ñì‚ñà‚ñà‚ñà‚ñÑ      ‚ñÑ‚ñÑ   ‚ñÑ               ‚ñå
         ‚ñÑ‚ñå‚ñå‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñÑ    ‚ñà‚ñà ‚ñì‚ñà‚ñÄ  ‚ñÑ‚ñå‚ñÄ‚ñÑ  ‚ñì‚ñì‚ñå‚ñÑ   ‚ñì‚ñà  ‚ñÑ‚ñå‚ñì‚ñì‚ñå‚ñÑ ‚ñå‚ñå   ‚ñì
       ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå‚ñì‚ñì   ‚ñà‚ñà‚ñì‚ñà‚ñÑ  ‚ñì‚ñà‚ñÑ‚ñì‚ñì ‚ñê‚ñà‚ñå  ‚ñà‚ñà ‚ñì‚ñà  ‚ñà‚ñå  ‚ñà‚ñà  ‚ñà‚ñå ‚ñà‚ñì
      ‚ñì‚ñì‚ñì‚ñì‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñå  ‚ñà‚ñà  ‚ñà‚ñì  ‚ñì‚ñå‚ñÑ‚ñÑ ‚ñê‚ñà‚ñì‚ñÑ‚ñì‚ñà‚ñÄ ‚ñà‚ñì‚ñà ‚ñÄ‚ñà‚ñÑ‚ñÑ‚ñà‚ñÄ   ‚ñà‚ñì‚ñà
       ‚ñì‚ñå                           ‚ñê‚ñà‚ñå                   ‚ñà‚ñå
        ‚ñì
  
version: 2-dev

üê∞ Keploy: 2024-02-15T22:41:46Z 	[34mINFO[0m		{"keploy test and mock path": "/Users/sarthak_1/Documents/Keploy/v2/keploy/keploy", "keploy testReport path": "/Users/sarthak_1/Documents/Keploy/v2/keploy/keploy/testReports/test-run-324"}
üê∞ Keploy: 2024-02-15T22:41:47Z 	[34mINFO[0m	keploy initialized and probes added to the kernel.
üê∞ Keploy: 2024-02-15T22:41:47Z 	[34mINFO[0m	Java detected and CA already exists	{"path": "/usr/lib/jvm/java-17-openjdk-arm64/lib/security/cacerts"}
üê∞ Keploy: 2024-02-15T22:41:48Z 	[34mINFO[0m	Java detected and CA already exists	{"path": "/usr/lib/jvm/java-17-openjdk-arm64/lib/security/cacerts"}
üê∞ Keploy: 2024-02-15T22:41:48Z 	[34mINFO[0m	Keploy has hijacked the DNS resolution mechanism, your application may misbehave in keploy test mode if you have provided wrong domain name in your application code.
üê∞ Keploy: 2024-02-15T22:41:48Z 	[34mINFO[0m	Proxy started at port:16789
üê∞ Keploy: 2024-02-15T22:41:48Z 	[34mINFO[0m	starting DNS server at addr :16789
üê∞ Keploy: 2024-02-15T22:41:48Z 	[34mINFO[0m	the oss config mocks for test-set-5 are: [0x40005ce180 0x40005ce300 0x4001e0a900 0x4001e0aa80 0x4001e0ac00 0x4001e0ad80 0x4001e0af00 0x4001e0b080 0x4001e0b200 0x4001e0b380 0x4001e0b500 0x4001e0b680 0x4001e0b800 0x4001e0b980 0x4001e0bb00 0x4001e0bc80 0x4001e0be00 0x40005c6000 0x40005c6180 0x40005c6300 0x40005c6480 0x40005c6600 0x40005c6780 0x40005c6900 0x40005c6a80 0x40005c6c00 0x40005c6d80 0x40005c6f00 0x40005c7080 0x40005c7200 0x40005c7380 0x40005c7500 0x40005c7680 0x40005c7800 0x40005c7980 0x40005c7b00 0x40005c7c80 0x40005c7e00 0x4000608000 0x4000608180 0x4000608300 0x4000608480 0x4000608600 0x4000608780 0x4000608900 0x4000608a80 0x4000608c00 0x4000608d80 0x4000608f00 0x4000609080 0x4000609200 0x4000609380 0x4000609500 0x4000609680 0x4000609800 0x4000609980 0x4000609b00 0x4000609c80 0x4000609e00 0x400067c000 0x400067c180 0x400067c300 0x400067c480 0x400067c600 0x400067c780 0x400067c900 0x400067ca80 0x400067cc00 0x400067cd80 0x400067cf00 0x400067d080 0x400067d200 0x400067d380 0x400067d500 0x400067d680 0x400067d800 0x400067d980 0x400067db00 0x400067dc80 0x400067de00 0x400089e000 0x400089e180 0x400089e300 0x400089e480 0x400089e600 0x400089e780 0x400089e900 0x400089ea80 0x400089ec00 0x400089ed80 0x400089ef00 0x400089f080 0x400089f200 0x400089f380 0x400089f500 0x400089f680 0x400089f800 0x400089f980 0x400089fb00 0x400089fc80 0x400089fe00 0x4000902000 0x4000902180 0x4000902300 0x4000902480 0x4000902600 0x4000902780 0x4000902900 0x4000902a80 0x4000902c00 0x4000902d80 0x4000902f00 0x4000903080 0x4000903200 0x4000903380 0x4000903500 0x4000903680 0x4000903800 0x4000903980 0x4000903b00 0x4000903c80 0x4000903e00 0x4000928000 0x4000928180 0x4000928300 0x4000928480 0x4000928600 0x4000928780 0x4000928900 0x4000928a80 0x4000928c00 0x4000928d80 0x4000928f00 0x4000929080 0x4000929200 0x4000929380 0x4000929500 0x4000929680 0x4000929800 0x4000929980 0x4000929b00 0x4000929c80 0x4000929e00 0x4000956000 0x4000956180 0x4000956300 0x4000956480 0x4000956600 0x4000956780 0x4000956900 0x4000956a80 0x4000956c00 0x4000956d80 0x4000956f00 0x4000957080 0x4000957200 0x4000957380 0x4000957500 0x4000957680 0x4000957800 0x4000957980 0x4000957b00 0x4000957c80 0x4000957e00 0x400099e000 0x400099e180 0x400099e300 0x400099e480 0x400099e600 0x400099e780 0x400099e900 0x400099ea80 0x400099ec00 0x400099ed80 0x400099ef00 0x400099f080 0x400099f200 0x400099f380 0x400099f500 0x400099f680 0x400099f800 0x400099f980 0x400099fb00 0x400099fc80 0x400099fe00 0x40009c6000 0x40009c6180 0x40009c6300 0x40009c6480 0x40009c6600 0x40009c6780 0x40009c6900 0x40009c6a80 0x40009c6c00 0x40009c6d80 0x40009c6f00 0x40009c7080 0x40009c7200 0x40009c7380 0x40009c7500 0x40009c7680 0x40009c7800 0x40009c7980 0x40009c7b00 0x40009c7c80 0x40009c7e00 0x40009f0000 0x40009f0180 0x40009f0300 0x40009f0480 0x40009f0600 0x40009f0780 0x40009f0900 0x40009f0a80 0x40009f0c00 0x40009f0d80 0x40009f0f00 0x40009f1080 0x40009f1200 0x40009f1380 0x40009f1500 0x40009f1680 0x40009f1800 0x40009f1980 0x40009f1b00 0x40009f1c80 0x40009f1e00 0x4000a1c000 0x4000a1c180 0x4000a1c300 0x4000a1c480 0x4000a1c600 0x4000a1c780 0x4000a1c900 0x4000a1ca80 0x4000a1cc00 0x4000a1cd80 0x4000a1cf00 0x4000a1d080 0x4000a1d200 0x4000a1d380 0x4000a1d500 0x4000a1d680 0x4000a1d800 0x4000a1d980 0x4000a1db00 0x4000a1dc80 0x4000a1de00 0x4000a48000 0x4000a48180 0x4000a48300 0x4000a48480 0x4000a48600 0x4000a48780 0x4000a48900 0x4000a48a80 0x4000a48c00 0x4000a48d80 0x4000a48f00 0x4000a49080 0x4000a49200 0x4000a49380 0x4000a49500 0x4000a49680 0x4000a49800 0x4000a49980 0x4000a49b00 0x4000a49c80 0x4000a49e00 0x4000a8c000 0x4000a8c180 0x4000a8c300 0x4000a8c480 0x4000a8c600 0x4000a8c780 0x4000a8c900 0x4000a8ca80 0x4000a8cc00 0x4000a8cd80 0x4000a8cf00 0x4000a8d080 0x4000a8d200 0x4000a8d380 0x4000a8d500 0x4000a8d680 0x4000a8d800 0x4000a8d980 0x4000a8db00 0x4000a8dc80 0x4000a8de00 0x4000ab6000 0x4000ab6180 0x4000ab6300 0x4000ab6480 0x4000ab6600 0x4000ab6780 0x4000ab6900 0x4000ab6a80 0x4000ab6c00 0x4000ab6d80 0x4000ab6f00 0x4000ab7080 0x4000ab7200 0x4000ab7380 0x4000ab7500 0x4000ab7680 0x4000ab7800 0x4000ab7980 0x4000ab7b00 0x4000ab7c80 0x4000ab7e00 0x4000ae0000 0x4000ae0180 0x4000ae0300 0x4000ae0480 0x4000ae0600 0x4000ae0780 0x4000ae0900 0x4000ae0a80 0x4000ae0c00 0x4000ae0d80 0x4000ae0f00 0x4000ae1080 0x4000ae1200 0x4000ae1380 0x4000ae1500 0x4000ae1680 0x4000ae1800 0x4000ae1980 0x4000ae1b00 0x4000ae1c80 0x4000ae1e00 0x4000b16000 0x4000b16180 0x4000b16300 0x4000b16480 0x4000b16600 0x4000b16780 0x4000b16900 0x4000b16a80 0x4000b16c00 0x4000b16d80 0x4000b16f00 0x4000b17080 0x4000b17200 0x4000b17380 0x4000b17500 0x4000b17680 0x4000b17800 0x4000b17980 0x4000b17b00 0x4000b17c80 0x4000b17e00 0x4000b40000 0x4000b40180 0x4000b40300 0x4000b40480 0x4000b40600 0x4000b40780 0x4000b40900 0x4000b40a80 0x4000b40c00 0x4000b40d80 0x4000b40f00 0x4000b41080 0x4000b41200 0x4000b41380 0x4000b41500 0x4000b41680 0x4000b41800 0x4000b41980 0x4000b41b00 0x4000b41c80 0x4000b41e00 0x4000b6c000 0x4000b6c180 0x4000b6c300 0x4000b6c480 0x4000b6c600 0x4000b6c780 0x4000b6c900 0x4000b6ca80 0x4000b6cc00 0x4000b6cd80 0x4000b6cf00 0x4000b6d080 0x4000b6d200 0x4000b6d380 0x4000b6d500 0x4000b6d680 0x4000b6d800 0x4000b6d980 0x4000b6db00 0x4000b6dc80 0x4000b6de00 0x4000ba4000 0x4000ba4180 0x4000ba4300 0x4000ba4480 0x4000ba4600 0x4000ba4780 0x4000ba4900 0x4000ba4a80 0x4000ba4c00 0x4000ba4d80 0x4000ba4f00 0x4000ba5080 0x4000ba5200 0x4000ba5380 0x4000ba5500 0x4000ba5680 0x4000ba5800 0x4000ba5980 0x4000ba5b00 0x4000ba5c80 0x4000ba5e00 0x4000de0000 0x4000de0180 0x4000de0300 0x4000de0480 0x4000de0600 0x4000de0780 0x4000de0900 0x4000de0a80 0x4000de0c00 0x4000de0d80 0x4000de0f00 0x4000de1080 0x4000de1200 0x4000de1380 0x4000de1500 0x4000de1680 0x4000de1800 0x4000de1980 0x4000de1b00 0x4000de1c80 0x4000de1e00 0x4000e12000 0x4000e12180 0x4000e12300 0x4000e12480 0x4000e12600 0x4000e12780 0x4000e12900 0x4000e12a80 0x4000e12c00 0x4000e12d80 0x4000e12f00 0x4000e13080 0x4000e13200 0x4000e13380 0x4000e13500 0x4000e13680 0x4000e13800 0x4000e13980 0x4000e13b00 0x4000e13c80 0x4000e13e00 0x4000e48000 0x4000e48180 0x4000e48300]

üê∞ Keploy: 2024-02-15T22:41:48Z 	[34mINFO[0m	the oss tcs mocks for test-set-5 are: []

üê∞ Keploy: 2024-02-15T22:41:48Z 	[34mINFO[0m	running user application for	{"test-set": "test-set-5"}
üê∞ Keploy: 2024-02-15T22:41:48Z 	[34mINFO[0m		{"no of test cases": 111, "test-set": "test-set-5"}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.0.2)

INFO  Version - HV000001: Hibernate Validator 8.0.0.Final
INFO  PetClinicApplication - Starting PetClinicApplication v3.0.2 using Java 17.0.10 with PID 1795784 (/Users/sarthak_1/Documents/Keploy/v2/v2-final/samples-java/spring-petclinic/spring-petclinic-rest/target/spring-petclinic-rest-3.0.2.jar started by newsarthak in /Users/sarthak_1/Documents/Keploy/v2/keploy)
DEBUG PetClinicApplication - Running with Spring Boot v3.0.2, Spring v6.0.4
INFO  PetClinicApplication - The following 2 profiles are active: "postgresql", "spring-data-jpa"
INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 7 JPA repository interfaces.
INFO  TomcatWebServer - Tomcat initialized with port(s): 9966 (http)
INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9966"]
INFO  StandardService - Starting service [Tomcat]
INFO  StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.5]
INFO  [/petclinic] - Initializing Spring embedded WebApplicationContext
INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2396 ms
INFO  LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  Version - HHH000412: Hibernate ORM core version 6.1.6.Final
WARN  deprecation - HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
INFO  HikariDataSource - HikariPool-1 - Starting...
CONNECTION ID 0
LENGTH OF ALL MOCKS 461
PREPARED STATEMENT map[0:[{S_1 COMMIT} {S_2 } {S_3 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_4 BEGIN} {S_5 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_6 BEGIN READ ONLY} {S_7 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_8 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_9 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_10 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_11 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_12 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_13 select p1_0.id,p1_0.name from types p1_0} {S_14 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}] 2:[{S_1 COMMIT} {S_2 } {S_3 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_4 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
DECODED VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [74 97 105 110] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
Values Copy [              ] ----++=---  [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
Values Copy [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
----- [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
----- [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
DATA ROWS 1 [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
DATA ROWS 2 [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	the length of the encoded buffer is not equal to the length of the original buffer	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "after_encoded": 582, "buffer": 583}
Matched In Binary Matching for sorted!!! mock-1
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-1"}
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-2
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-2"}
Matched In Absolute Custom Matching for sorted!!! mock-4
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-4"}
Matched In Absolute Custom Matching for sorted!!! mock-5
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-5"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 44  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [{  []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 44  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [{  []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 44  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [{  []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 44  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [{  []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 44  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [{  []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-6
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-6"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 76  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { SHOW TRANSACTION ISOLATION LEVEL []} [{ SHOW TRANSACTION ISOLATION LEVEL []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 76  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { SHOW TRANSACTION ISOLATION LEVEL []} [{ SHOW TRANSACTION ISOLATION LEVEL []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 76  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { SHOW TRANSACTION ISOLATION LEVEL []} [{ SHOW TRANSACTION ISOLATION LEVEL []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 76  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { SHOW TRANSACTION ISOLATION LEVEL []} [{ SHOW TRANSACTION ISOLATION LEVEL []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 76  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { SHOW TRANSACTION ISOLATION LEVEL []} [{ SHOW TRANSACTION ISOLATION LEVEL []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-7
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-7"}
INFO  HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1ba05e38
INFO  HikariDataSource - HikariPool-1 - Start completed.
CONNECTION ID 4
LENGTH OF ALL MOCKS 461
PREPARED STATEMENT map[0:[{S_1 COMMIT} {S_2 } {S_3 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_4 BEGIN} {S_5 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_6 BEGIN READ ONLY} {S_7 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_8 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_9 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_10 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_11 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_12 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_13 select p1_0.id,p1_0.name from types p1_0} {S_14 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}] 2:[{S_1 COMMIT} {S_2 } {S_3 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_4 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
DECODED VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [74 97 105 110] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
Values Copy [              ] ----++=---  [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
Values Copy [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
----- [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
----- [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
DATA ROWS 1 [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
DATA ROWS 2 [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	the length of the encoded buffer is not equal to the length of the original buffer	{"Client IP Address": "[::1]:49246", "Client ConnectionID": 6, "Destination ConnectionID": 7, "after_encoded": 582, "buffer": 583}
Matched In Binary Matching for sorted!!! mock-11
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49246", "Client ConnectionID": 6, "Destination ConnectionID": 7, "mock": "mock-11"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 4578  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select string_agg(word, ',') from pg_catalog.pg_get_keywords() where word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[]) []} [{ select string_agg(word, ',') from pg_catalog.pg_get_keywords() where word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[]) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 4578  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select string_agg(word, ',') from pg_catalog.pg_get_keywords() where word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[]) []} [{ select string_agg(word, ',') from pg_catalog.pg_get_keywords() where word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[]) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 4578  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select string_agg(word, ',') from pg_catalog.pg_get_keywords() where word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[]) []} [{ select string_agg(word, ',') from pg_catalog.pg_get_keywords() where word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[]) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 4578  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select string_agg(word, ',') from pg_catalog.pg_get_keywords() where word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[]) []} [{ select string_agg(word, ',') from pg_catalog.pg_get_keywords() where word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[]) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 4578  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select string_agg(word, ',') from pg_catalog.pg_get_keywords() where word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[]) []} [{ select string_agg(word, ',') from pg_catalog.pg_get_keywords() where word <> ALL ('{a,abs,absolute,action,ada,add,admin,after,all,allocate,alter,always,and,any,are,array,as,asc,asensitive,assertion,assignment,asymmetric,at,atomic,attribute,attributes,authorization,avg,before,begin,bernoulli,between,bigint,binary,blob,boolean,both,breadth,by,c,call,called,cardinality,cascade,cascaded,case,cast,catalog,catalog_name,ceil,ceiling,chain,char,char_length,character,character_length,character_set_catalog,character_set_name,character_set_schema,characteristics,characters,check,checked,class_origin,clob,close,coalesce,cobol,code_units,collate,collation,collation_catalog,collation_name,collation_schema,collect,column,column_name,command_function,command_function_code,commit,committed,condition,condition_number,connect,connection_name,constraint,constraint_catalog,constraint_name,constraint_schema,constraints,constructors,contains,continue,convert,corr,corresponding,count,covar_pop,covar_samp,create,cross,cube,cume_dist,current,current_collation,current_date,current_default_transform_group,current_path,current_role,current_time,current_timestamp,current_transform_group_for_type,current_user,cursor,cursor_name,cycle,data,date,datetime_interval_code,datetime_interval_precision,day,deallocate,dec,decimal,declare,default,defaults,deferrable,deferred,defined,definer,degree,delete,dense_rank,depth,deref,derived,desc,describe,descriptor,deterministic,diagnostics,disconnect,dispatch,distinct,domain,double,drop,dynamic,dynamic_function,dynamic_function_code,each,element,else,end,end-exec,equals,escape,every,except,exception,exclude,excluding,exec,execute,exists,exp,external,extract,false,fetch,filter,final,first,float,floor,following,for,foreign,fortran,found,free,from,full,function,fusion,g,general,get,global,go,goto,grant,granted,group,grouping,having,hierarchy,hold,hour,identity,immediate,implementation,in,including,increment,indicator,initially,inner,inout,input,insensitive,insert,instance,instantiable,int,integer,intersect,intersection,interval,into,invoker,is,isolation,join,k,key,key_member,key_type,language,large,last,lateral,leading,left,length,level,like,ln,local,localtime,localtimestamp,locator,lower,m,map,match,matched,max,maxvalue,member,merge,message_length,message_octet_length,message_text,method,min,minute,minvalue,mod,modifies,module,month,more,multiset,mumps,name,names,national,natural,nchar,nclob,nesting,new,next,no,none,normalize,normalized,not,"null",nullable,nullif,nulls,number,numeric,object,octet_length,octets,of,old,on,only,open,option,options,or,order,ordering,ordinality,others,out,outer,output,over,overlaps,overlay,overriding,pad,parameter,parameter_mode,parameter_name,parameter_ordinal_position,parameter_specific_catalog,parameter_specific_name,parameter_specific_schema,partial,partition,pascal,path,percent_rank,percentile_cont,percentile_disc,placing,pli,position,power,preceding,precision,prepare,preserve,primary,prior,privileges,procedure,public,range,rank,read,reads,real,recursive,ref,references,referencing,regr_avgx,regr_avgy,regr_count,regr_intercept,regr_r2,regr_slope,regr_sxx,regr_sxy,regr_syy,relative,release,repeatable,restart,result,return,returned_cardinality,returned_length,returned_octet_length,returned_sqlstate,returns,revoke,right,role,rollback,rollup,routine,routine_catalog,routine_name,routine_schema,row,row_count,row_number,rows,savepoint,scale,schema,schema_name,scope_catalog,scope_name,scope_schema,scroll,search,second,section,security,select,self,sensitive,sequence,serializable,server_name,session,session_user,set,sets,similar,simple,size,smallint,some,source,space,specific,specific_name,specifictype,sql,sqlexception,sqlstate,sqlwarning,sqrt,start,state,statement,static,stddev_pop,stddev_samp,structure,style,subclass_origin,submultiset,substring,sum,symmetric,system,system_user,table,table_name,tablesample,temporary,then,ties,time,timestamp,timezone_hour,timezone_minute,to,top_level_count,trailing,transaction,transaction_active,transactions_committed,transactions_rolled_back,transform,transforms,translate,translation,treat,trigger,trigger_catalog,trigger_name,trigger_schema,trim,true,type,uescape,unbounded,uncommitted,under,union,unique,unknown,unnamed,unnest,update,upper,usage,user,user_defined_type_catalog,user_defined_type_code,user_defined_type_name,user_defined_type_schema,using,value,values,var_pop,var_samp,varchar,varying,view,when,whenever,where,width_bucket,window,with,within,without,work,write,year,zone}'::text[]) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 4
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 4
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 4
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 4
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 4
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 4
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 4
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 4
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 4
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 4
Matched In Binary Matching for Unsorted mock-3
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49246", "Client ConnectionID": 6, "Destination ConnectionID": 7, "mock": "mock-3"}
Matched In Absolute Custom Matching for sorted!!! mock-14
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49246", "Client ConnectionID": 6, "Destination ConnectionID": 7, "mock": "mock-14"}
Matched In Absolute Custom Matching for sorted!!! mock-170
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49246", "Client ConnectionID": 6, "Destination ConnectionID": 7, "mock": "mock-170"}
CONNECTION ID 8
LENGTH OF ALL MOCKS 461
PREPARED STATEMENT map[0:[{S_1 COMMIT} {S_2 } {S_3 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_4 BEGIN} {S_5 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_6 BEGIN READ ONLY} {S_7 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_8 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_9 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_10 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_11 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_12 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_13 select p1_0.id,p1_0.name from types p1_0} {S_14 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}] 2:[{S_1 COMMIT} {S_2 } {S_3 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_4 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
DECODED VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [74 97 105 110] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
Values Copy [              ] ----++=---  [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
Values Copy [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
----- [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
----- [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
DATA ROWS 1 [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
DATA ROWS 2 [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	the length of the encoded buffer is not equal to the length of the original buffer	{"Client IP Address": "[::1]:49252", "Client ConnectionID": 10, "Destination ConnectionID": 11, "after_encoded": 582, "buffer": 583}
Matched In Binary Matching for sorted!!! mock-16
üê∞ Keploy: 2024-02-15T22:41:53Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49252", "Client ConnectionID": 10, "Destination ConnectionID": 11, "mock": "mock-16"}
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 8
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 8
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 8
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 8
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 8
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 8
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 8
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 8
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 8
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 8
Matched In Binary Matching for Unsorted mock-12
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49252", "Client ConnectionID": 10, "Destination ConnectionID": 11, "mock": "mock-12"}
Matched In Absolute Custom Matching for sorted!!! mock-19
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49252", "Client ConnectionID": 10, "Destination ConnectionID": 11, "mock": "mock-19"}
Matched In Absolute Custom Matching for sorted!!! mock-453
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49252", "Client ConnectionID": 10, "Destination ConnectionID": 11, "mock": "mock-453"}
CONNECTION ID 12
LENGTH OF ALL MOCKS 461
PREPARED STATEMENT map[0:[{S_1 COMMIT} {S_2 } {S_3 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_4 BEGIN} {S_5 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_6 BEGIN READ ONLY} {S_7 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_8 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_9 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_10 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_11 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_12 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_13 select p1_0.id,p1_0.name from types p1_0} {S_14 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}] 2:[{S_1 COMMIT} {S_2 } {S_3 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_4 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
DECODED VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [74 97 105 110] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
Values Copy [              ] ----++=---  [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
Values Copy [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
----- [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
----- [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
DATA ROWS 1 [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
DATA ROWS 2 [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	the length of the encoded buffer is not equal to the length of the original buffer	{"Client IP Address": "[::1]:49264", "Client ConnectionID": 14, "Destination ConnectionID": 15, "after_encoded": 582, "buffer": 583}
Matched In Binary Matching for sorted!!! mock-21
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49264", "Client ConnectionID": 14, "Destination ConnectionID": 15, "mock": "mock-21"}
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 12
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 12
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 12
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 12
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 12
Matched In Binary Matching for sorted!!! mock-8
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-8"}
INFO  SQL dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 12
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 12
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 12
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 12
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 12
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 67  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select current_schema() []} [{ select current_schema() []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 67  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select current_schema() []} [{ select current_schema() []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 67  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select current_schema() []} [{ select current_schema() []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 67  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select current_schema() []} [{ select current_schema() []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 67  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select current_schema() []} [{ select current_schema() []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-13
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49264", "Client ConnectionID": 14, "Destination ConnectionID": 15, "mock": "mock-13"}
Matched In Binary Matching for sorted!!! mock-9
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-9"}
Matched In Absolute Custom Matching for sorted!!! mock-24
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49264", "Client ConnectionID": 14, "Destination ConnectionID": 15, "mock": "mock-24"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 67  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select current_schema() []} [{ select current_schema() []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 67  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select current_schema() []} [{ select current_schema() []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 67  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select current_schema() []} [{ select current_schema() []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 67  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select current_schema() []} [{ select current_schema() []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 67  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { select current_schema() []} [{ select current_schema() []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Absolute Custom Matching for sorted!!! mock-457
Matched In Binary Matching for sorted!!! mock-55
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-55"}
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49264", "Client ConnectionID": 14, "Destination ConnectionID": 15, "mock": "mock-457"}
CONNECTION ID 16
LENGTH OF ALL MOCKS 461
PREPARED STATEMENT map[0:[{S_1 COMMIT} {S_2 } {S_3 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_4 BEGIN} {S_5 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_6 BEGIN READ ONLY} {S_7 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_8 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_9 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_10 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_11 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_12 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_13 select p1_0.id,p1_0.name from types p1_0} {S_14 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}] 2:[{S_1 COMMIT} {S_2 } {S_3 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_4 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
DECODED VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [74 97 105 110] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
Values Copy [              ] ----++=---  [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
Values Copy [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
----- [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
----- [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
DATA ROWS 1 [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
DATA ROWS 2 [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	the length of the encoded buffer is not equal to the length of the original buffer	{"Client IP Address": "[::1]:49072", "Client ConnectionID": 18, "Destination ConnectionID": 19, "after_encoded": 582, "buffer": 583}
Matched In Binary Matching for sorted!!! mock-26
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49072", "Client ConnectionID": 18, "Destination ConnectionID": 19, "mock": "mock-26"}
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 16
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 16
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 16
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 16
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 16
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 16
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 16
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 16
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 16
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 16
Matched In Binary Matching for Unsorted mock-17
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49072", "Client ConnectionID": 18, "Destination ConnectionID": 19, "mock": "mock-17"}
Matched In Absolute Custom Matching for sorted!!! mock-29
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49072", "Client ConnectionID": 18, "Destination ConnectionID": 19, "mock": "mock-29"}
Matched In Absolute Custom Matching for sorted!!! mock-458
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49072", "Client ConnectionID": 18, "Destination ConnectionID": 19, "mock": "mock-458"}
CONNECTION ID 20
LENGTH OF ALL MOCKS 461
PREPARED STATEMENT map[0:[{S_1 COMMIT} {S_2 } {S_3 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_4 BEGIN} {S_5 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_6 BEGIN READ ONLY} {S_7 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_8 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_9 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_10 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_11 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_12 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_13 select p1_0.id,p1_0.name from types p1_0} {S_14 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}] 2:[{S_1 COMMIT} {S_2 } {S_3 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_4 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
DECODED VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [74 97 105 110] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
Values Copy [              ] ----++=---  [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
Values Copy [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
----- [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
----- [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
DATA ROWS 1 [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
DATA ROWS 2 [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	the length of the encoded buffer is not equal to the length of the original buffer	{"Client IP Address": "[::1]:49074", "Client ConnectionID": 22, "Destination ConnectionID": 23, "after_encoded": 582, "buffer": 583}
Matched In Binary Matching for sorted!!! mock-31
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49074", "Client ConnectionID": 22, "Destination ConnectionID": 23, "mock": "mock-31"}
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 20
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 20
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 20
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 20
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 20
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 20
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 20
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 20
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 20
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 20
Matched In Binary Matching for Unsorted mock-18
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49074", "Client ConnectionID": 22, "Destination ConnectionID": 23, "mock": "mock-18"}
Matched In Absolute Custom Matching for sorted!!! mock-34
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49074", "Client ConnectionID": 22, "Destination ConnectionID": 23, "mock": "mock-34"}
Matched In Absolute Custom Matching for sorted!!! mock-459
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49074", "Client ConnectionID": 22, "Destination ConnectionID": 23, "mock": "mock-459"}
CONNECTION ID 24
LENGTH OF ALL MOCKS 461
PREPARED STATEMENT map[0:[{S_1 COMMIT} {S_2 } {S_3 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_4 BEGIN} {S_5 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_6 BEGIN READ ONLY} {S_7 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_8 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_9 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_10 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_11 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_12 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_13 select p1_0.id,p1_0.name from types p1_0} {S_14 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}] 2:[{S_1 COMMIT} {S_2 } {S_3 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_4 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
DECODED VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [74 97 105 110] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
Values Copy [              ] ----++=---  [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
Values Copy [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
----- [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
----- [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
DATA ROWS 1 [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
DATA ROWS 2 [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	the length of the encoded buffer is not equal to the length of the original buffer	{"Client IP Address": "[::1]:49088", "Client ConnectionID": 26, "Destination ConnectionID": 27, "after_encoded": 582, "buffer": 583}
Matched In Binary Matching for sorted!!! mock-36
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49088", "Client ConnectionID": 26, "Destination ConnectionID": 27, "mock": "mock-36"}
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 24
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 24
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 24
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 24
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 24
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 24
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 24
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 24
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 24
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 24
Matched In Binary Matching for Unsorted mock-22
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49088", "Client ConnectionID": 26, "Destination ConnectionID": 27, "mock": "mock-22"}
Matched In Absolute Custom Matching for sorted!!! mock-39
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49088", "Client ConnectionID": 26, "Destination ConnectionID": 27, "mock": "mock-39"}
Matched In Absolute Custom Matching for sorted!!! mock-460
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49088", "Client ConnectionID": 26, "Destination ConnectionID": 27, "mock": "mock-460"}
CONNECTION ID 28
LENGTH OF ALL MOCKS 461
PREPARED STATEMENT map[0:[{S_1 COMMIT} {S_2 } {S_3 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_4 BEGIN} {S_5 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_6 BEGIN READ ONLY} {S_7 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_8 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_9 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_10 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_11 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_12 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_13 select p1_0.id,p1_0.name from types p1_0} {S_14 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}] 2:[{S_1 COMMIT} {S_2 } {S_3 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_4 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
DECODED VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [74 97 105 110] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
Values Copy [              ] ----++=---  [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
Values Copy [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
----- [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
----- [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
DATA ROWS 1 [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
DATA ROWS 2 [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	the length of the encoded buffer is not equal to the length of the original buffer	{"Client IP Address": "[::1]:49100", "Client ConnectionID": 30, "Destination ConnectionID": 31, "after_encoded": 582, "buffer": 583}
Matched In Binary Matching for sorted!!! mock-41
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49100", "Client ConnectionID": 30, "Destination ConnectionID": 31, "mock": "mock-41"}
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 28
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 28
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 28
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 28
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 28
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 28
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 28
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 28
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 28
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 28
Matched In Binary Matching for Unsorted mock-23
üê∞ Keploy: 2024-02-15T22:41:54Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49100", "Client ConnectionID": 30, "Destination ConnectionID": 31, "mock": "mock-23"}
Matched In Absolute Custom Matching for sorted!!! mock-44
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49100", "Client ConnectionID": 30, "Destination ConnectionID": 31, "mock": "mock-44"}
Matched In Absolute Custom Matching for sorted!!! mock-451
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49100", "Client ConnectionID": 30, "Destination ConnectionID": 31, "mock": "mock-451"}
CONNECTION ID 32
LENGTH OF ALL MOCKS 461
PREPARED STATEMENT map[0:[{S_1 COMMIT} {S_2 } {S_3 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_4 BEGIN} {S_5 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_6 BEGIN READ ONLY} {S_7 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_8 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_9 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_10 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_11 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_12 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_13 select p1_0.id,p1_0.name from types p1_0} {S_14 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}] 2:[{S_1 COMMIT} {S_2 } {S_3 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_4 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
DECODED VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [74 97 105 110] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
Values Copy [              ] ----++=---  [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
Values Copy [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
----- [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
----- [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
DATA ROWS 1 [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
DATA ROWS 2 [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	the length of the encoded buffer is not equal to the length of the original buffer	{"Client IP Address": "[::1]:49112", "Client ConnectionID": 34, "Destination ConnectionID": 35, "after_encoded": 582, "buffer": 583}
Matched In Binary Matching for sorted!!! mock-46
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49112", "Client ConnectionID": 34, "Destination ConnectionID": 35, "mock": "mock-46"}
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 32
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 32
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 32
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 32
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 32
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 32
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 32
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 32
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 32
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 32
Matched In Binary Matching for Unsorted mock-27
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49112", "Client ConnectionID": 34, "Destination ConnectionID": 35, "mock": "mock-27"}
Matched In Absolute Custom Matching for sorted!!! mock-49
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49112", "Client ConnectionID": 34, "Destination ConnectionID": 35, "mock": "mock-49"}
Matched In Absolute Custom Matching for sorted!!! mock-455
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49112", "Client ConnectionID": 34, "Destination ConnectionID": 35, "mock": "mock-455"}
CONNECTION ID 36
LENGTH OF ALL MOCKS 461
PREPARED STATEMENT map[0:[{S_1 COMMIT} {S_2 } {S_3 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_4 BEGIN} {S_5 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_6 BEGIN READ ONLY} {S_7 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_8 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_9 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_10 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_11 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_12 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_13 select p1_0.id,p1_0.name from types p1_0} {S_14 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}] 2:[{S_1 COMMIT} {S_2 } {S_3 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_4 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
DECODED VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [74 97 105 110] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
Values Copy [              ] ----++=---  [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
Values Copy [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
----- [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
----- [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
[37 168 167]
[]
[]
[]
[]
SRC VALUES [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
DATA ROWS 1 [1 2021-07-07 Dexter 3 HNO A -504 SECTOR-2 ANMOL APPTT NEW DELHI Ritik Jain 9958178549 1 Dog    ]
DATA ROWS 2 [[49] [50 48 50 49 45 48 55 45 48 55] [68 101 120 116 101 114] [51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [78 69 87 32 68 69 76 72 73] [82 105 116 105 107] [37 168 167] [57 57 53 56 49 55 56 53 52 57] [49] [68 111 103] [] [] [] []]
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	the length of the encoded buffer is not equal to the length of the original buffer	{"Client IP Address": "[::1]:49116", "Client ConnectionID": 38, "Destination ConnectionID": 39, "after_encoded": 582, "buffer": 583}
Matched In Binary Matching for sorted!!! mock-51
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49116", "Client ConnectionID": 38, "Destination ConnectionID": 39, "mock": "mock-51"}
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 36
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 36
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 36
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 36
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 36
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 36
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 36
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 36
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 36
TEST prep map map[]
Inside Compare Exact Match &{[p] ClientRequest 41  {  [] [] []} [] {0 0} {0 } {} {[]} {} {0 } { 0} [] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {md5ad46a9b2987424c4cc82a528b1b9068b} 112 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 36
Matched In Binary Matching for Unsorted mock-28
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49116", "Client ConnectionID": 38, "Destination ConnectionID": 39, "mock": "mock-28"}
Matched In Absolute Custom Matching for sorted!!! mock-54
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49116", "Client ConnectionID": 38, "Destination ConnectionID": 39, "mock": "mock-54"}
Matched In Absolute Custom Matching for sorted!!! mock-454
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49116", "Client ConnectionID": 38, "Destination ConnectionID": 39, "mock": "mock-454"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 44  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [{  []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 44  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [{  []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 44  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [{  []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 44  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [{  []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 44  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [{  []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-56
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-56"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 124  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets drop constraint if exists FK6teg4kcjcnjhduguft56wcfoa []} [{ alter table if exists pets drop constraint if exists FK6teg4kcjcnjhduguft56wcfoa []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 124  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets drop constraint if exists FK6teg4kcjcnjhduguft56wcfoa []} [{ alter table if exists pets drop constraint if exists FK6teg4kcjcnjhduguft56wcfoa []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 124  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets drop constraint if exists FK6teg4kcjcnjhduguft56wcfoa []} [{ alter table if exists pets drop constraint if exists FK6teg4kcjcnjhduguft56wcfoa []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 124  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets drop constraint if exists FK6teg4kcjcnjhduguft56wcfoa []} [{ alter table if exists pets drop constraint if exists FK6teg4kcjcnjhduguft56wcfoa []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 124  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets drop constraint if exists FK6teg4kcjcnjhduguft56wcfoa []} [{ alter table if exists pets drop constraint if exists FK6teg4kcjcnjhduguft56wcfoa []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-57
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-57"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 124  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets drop constraint if exists FKtmmh1tq8pah5vxf8kuqqplo4p []} [{ alter table if exists pets drop constraint if exists FKtmmh1tq8pah5vxf8kuqqplo4p []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 124  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets drop constraint if exists FKtmmh1tq8pah5vxf8kuqqplo4p []} [{ alter table if exists pets drop constraint if exists FKtmmh1tq8pah5vxf8kuqqplo4p []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 124  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets drop constraint if exists FKtmmh1tq8pah5vxf8kuqqplo4p []} [{ alter table if exists pets drop constraint if exists FKtmmh1tq8pah5vxf8kuqqplo4p []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 124  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets drop constraint if exists FKtmmh1tq8pah5vxf8kuqqplo4p []} [{ alter table if exists pets drop constraint if exists FKtmmh1tq8pah5vxf8kuqqplo4p []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 124  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets drop constraint if exists FKtmmh1tq8pah5vxf8kuqqplo4p []} [{ alter table if exists pets drop constraint if exists FKtmmh1tq8pah5vxf8kuqqplo4p []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-58
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-58"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 125  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles drop constraint if exists FKqmykg2mabwkk1vhpc4526g44k []} [{ alter table if exists roles drop constraint if exists FKqmykg2mabwkk1vhpc4526g44k []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 125  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles drop constraint if exists FKqmykg2mabwkk1vhpc4526g44k []} [{ alter table if exists roles drop constraint if exists FKqmykg2mabwkk1vhpc4526g44k []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 125  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles drop constraint if exists FKqmykg2mabwkk1vhpc4526g44k []} [{ alter table if exists roles drop constraint if exists FKqmykg2mabwkk1vhpc4526g44k []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 125  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles drop constraint if exists FKqmykg2mabwkk1vhpc4526g44k []} [{ alter table if exists roles drop constraint if exists FKqmykg2mabwkk1vhpc4526g44k []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 125  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles drop constraint if exists FKqmykg2mabwkk1vhpc4526g44k []} [{ alter table if exists roles drop constraint if exists FKqmykg2mabwkk1vhpc4526g44k []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-59
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-59"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 135  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties drop constraint if exists FK35uiboyrpfn1bndrr5jorcj0m []} [{ alter table if exists vet_specialties drop constraint if exists FK35uiboyrpfn1bndrr5jorcj0m []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 135  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties drop constraint if exists FK35uiboyrpfn1bndrr5jorcj0m []} [{ alter table if exists vet_specialties drop constraint if exists FK35uiboyrpfn1bndrr5jorcj0m []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 135  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties drop constraint if exists FK35uiboyrpfn1bndrr5jorcj0m []} [{ alter table if exists vet_specialties drop constraint if exists FK35uiboyrpfn1bndrr5jorcj0m []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 135  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties drop constraint if exists FK35uiboyrpfn1bndrr5jorcj0m []} [{ alter table if exists vet_specialties drop constraint if exists FK35uiboyrpfn1bndrr5jorcj0m []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 135  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties drop constraint if exists FK35uiboyrpfn1bndrr5jorcj0m []} [{ alter table if exists vet_specialties drop constraint if exists FK35uiboyrpfn1bndrr5jorcj0m []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-60
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-60"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 135  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties drop constraint if exists FKby1c0fbaa0byaifi63vt18sx9 []} [{ alter table if exists vet_specialties drop constraint if exists FKby1c0fbaa0byaifi63vt18sx9 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 135  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties drop constraint if exists FKby1c0fbaa0byaifi63vt18sx9 []} [{ alter table if exists vet_specialties drop constraint if exists FKby1c0fbaa0byaifi63vt18sx9 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 135  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties drop constraint if exists FKby1c0fbaa0byaifi63vt18sx9 []} [{ alter table if exists vet_specialties drop constraint if exists FKby1c0fbaa0byaifi63vt18sx9 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 135  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties drop constraint if exists FKby1c0fbaa0byaifi63vt18sx9 []} [{ alter table if exists vet_specialties drop constraint if exists FKby1c0fbaa0byaifi63vt18sx9 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 135  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties drop constraint if exists FKby1c0fbaa0byaifi63vt18sx9 []} [{ alter table if exists vet_specialties drop constraint if exists FKby1c0fbaa0byaifi63vt18sx9 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-61
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-61"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 126  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists visits drop constraint if exists FK6jcifhlqqlsfseu67utlouauy []} [{ alter table if exists visits drop constraint if exists FK6jcifhlqqlsfseu67utlouauy []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 126  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists visits drop constraint if exists FK6jcifhlqqlsfseu67utlouauy []} [{ alter table if exists visits drop constraint if exists FK6jcifhlqqlsfseu67utlouauy []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 126  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists visits drop constraint if exists FK6jcifhlqqlsfseu67utlouauy []} [{ alter table if exists visits drop constraint if exists FK6jcifhlqqlsfseu67utlouauy []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 126  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists visits drop constraint if exists FK6jcifhlqqlsfseu67utlouauy []} [{ alter table if exists visits drop constraint if exists FK6jcifhlqqlsfseu67utlouauy []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 126  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists visits drop constraint if exists FK6jcifhlqqlsfseu67utlouauy []} [{ alter table if exists visits drop constraint if exists FK6jcifhlqqlsfseu67utlouauy []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-62
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-62"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 79  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists owners cascade []} [{ drop table if exists owners cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 79  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists owners cascade []} [{ drop table if exists owners cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 79  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists owners cascade []} [{ drop table if exists owners cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 79  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists owners cascade []} [{ drop table if exists owners cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 79  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists owners cascade []} [{ drop table if exists owners cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-63
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-63"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 77  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists pets cascade []} [{ drop table if exists pets cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 77  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists pets cascade []} [{ drop table if exists pets cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 77  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists pets cascade []} [{ drop table if exists pets cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 77  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists pets cascade []} [{ drop table if exists pets cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 77  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists pets cascade []} [{ drop table if exists pets cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-64
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-64"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists roles cascade []} [{ drop table if exists roles cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists roles cascade []} [{ drop table if exists roles cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists roles cascade []} [{ drop table if exists roles cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists roles cascade []} [{ drop table if exists roles cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists roles cascade []} [{ drop table if exists roles cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-65
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-65"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 84  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists specialties cascade []} [{ drop table if exists specialties cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 84  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists specialties cascade []} [{ drop table if exists specialties cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 84  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists specialties cascade []} [{ drop table if exists specialties cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 84  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists specialties cascade []} [{ drop table if exists specialties cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 84  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists specialties cascade []} [{ drop table if exists specialties cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-66
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-66"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists types cascade []} [{ drop table if exists types cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists types cascade []} [{ drop table if exists types cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists types cascade []} [{ drop table if exists types cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists types cascade []} [{ drop table if exists types cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists types cascade []} [{ drop table if exists types cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-67
üê∞ Keploy: 2024-02-15T22:41:55Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-67"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists users cascade []} [{ drop table if exists users cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists users cascade []} [{ drop table if exists users cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists users cascade []} [{ drop table if exists users cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists users cascade []} [{ drop table if exists users cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 78  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists users cascade []} [{ drop table if exists users cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-68
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-68"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 88  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists vet_specialties cascade []} [{ drop table if exists vet_specialties cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 88  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists vet_specialties cascade []} [{ drop table if exists vet_specialties cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 88  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists vet_specialties cascade []} [{ drop table if exists vet_specialties cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 88  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists vet_specialties cascade []} [{ drop table if exists vet_specialties cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 88  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists vet_specialties cascade []} [{ drop table if exists vet_specialties cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-69
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-69"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 77  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists vets cascade []} [{ drop table if exists vets cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 77  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists vets cascade []} [{ drop table if exists vets cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 77  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists vets cascade []} [{ drop table if exists vets cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 77  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists vets cascade []} [{ drop table if exists vets cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 77  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists vets cascade []} [{ drop table if exists vets cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-70
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-70"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 79  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists visits cascade []} [{ drop table if exists visits cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 79  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists visits cascade []} [{ drop table if exists visits cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 79  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists visits cascade []} [{ drop table if exists visits cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 79  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists visits cascade []} [{ drop table if exists visits cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 79  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { drop table if exists visits cascade []} [{ drop table if exists visits cascade []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-71
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-71"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 216  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table owners (id serial not null, first_name varchar(255), last_name varchar(255), address varchar(255), city varchar(255), telephone varchar(255), primary key (id)) []} [{ create table owners (id serial not null, first_name varchar(255), last_name varchar(255), address varchar(255), city varchar(255), telephone varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 216  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table owners (id serial not null, first_name varchar(255), last_name varchar(255), address varchar(255), city varchar(255), telephone varchar(255), primary key (id)) []} [{ create table owners (id serial not null, first_name varchar(255), last_name varchar(255), address varchar(255), city varchar(255), telephone varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 216  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table owners (id serial not null, first_name varchar(255), last_name varchar(255), address varchar(255), city varchar(255), telephone varchar(255), primary key (id)) []} [{ create table owners (id serial not null, first_name varchar(255), last_name varchar(255), address varchar(255), city varchar(255), telephone varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 216  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table owners (id serial not null, first_name varchar(255), last_name varchar(255), address varchar(255), city varchar(255), telephone varchar(255), primary key (id)) []} [{ create table owners (id serial not null, first_name varchar(255), last_name varchar(255), address varchar(255), city varchar(255), telephone varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 216  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table owners (id serial not null, first_name varchar(255), last_name varchar(255), address varchar(255), city varchar(255), telephone varchar(255), primary key (id)) []} [{ create table owners (id serial not null, first_name varchar(255), last_name varchar(255), address varchar(255), city varchar(255), telephone varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-72
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-72"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 171  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table pets (id serial not null, name varchar(255), birth_date DATE, owner_id integer, type_id integer, primary key (id)) []} [{ create table pets (id serial not null, name varchar(255), birth_date DATE, owner_id integer, type_id integer, primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 171  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table pets (id serial not null, name varchar(255), birth_date DATE, owner_id integer, type_id integer, primary key (id)) []} [{ create table pets (id serial not null, name varchar(255), birth_date DATE, owner_id integer, type_id integer, primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 171  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table pets (id serial not null, name varchar(255), birth_date DATE, owner_id integer, type_id integer, primary key (id)) []} [{ create table pets (id serial not null, name varchar(255), birth_date DATE, owner_id integer, type_id integer, primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 171  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table pets (id serial not null, name varchar(255), birth_date DATE, owner_id integer, type_id integer, primary key (id)) []} [{ create table pets (id serial not null, name varchar(255), birth_date DATE, owner_id integer, type_id integer, primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 171  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table pets (id serial not null, name varchar(255), birth_date DATE, owner_id integer, type_id integer, primary key (id)) []} [{ create table pets (id serial not null, name varchar(255), birth_date DATE, owner_id integer, type_id integer, primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-73
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-73"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 143  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table roles (id serial not null, role varchar(255), username varchar(255), primary key (id)) []} [{ create table roles (id serial not null, role varchar(255), username varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 143  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table roles (id serial not null, role varchar(255), username varchar(255), primary key (id)) []} [{ create table roles (id serial not null, role varchar(255), username varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 143  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table roles (id serial not null, role varchar(255), username varchar(255), primary key (id)) []} [{ create table roles (id serial not null, role varchar(255), username varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 143  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table roles (id serial not null, role varchar(255), username varchar(255), primary key (id)) []} [{ create table roles (id serial not null, role varchar(255), username varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 143  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table roles (id serial not null, role varchar(255), username varchar(255), primary key (id)) []} [{ create table roles (id serial not null, role varchar(255), username varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-74
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-74"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 126  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table specialties (id serial not null, name varchar(255), primary key (id)) []} [{ create table specialties (id serial not null, name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 126  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table specialties (id serial not null, name varchar(255), primary key (id)) []} [{ create table specialties (id serial not null, name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 126  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table specialties (id serial not null, name varchar(255), primary key (id)) []} [{ create table specialties (id serial not null, name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 126  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table specialties (id serial not null, name varchar(255), primary key (id)) []} [{ create table specialties (id serial not null, name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 126  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table specialties (id serial not null, name varchar(255), primary key (id)) []} [{ create table specialties (id serial not null, name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-75
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-75"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 120  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table types (id serial not null, name varchar(255), primary key (id)) []} [{ create table types (id serial not null, name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 120  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table types (id serial not null, name varchar(255), primary key (id)) []} [{ create table types (id serial not null, name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 120  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table types (id serial not null, name varchar(255), primary key (id)) []} [{ create table types (id serial not null, name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 120  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table types (id serial not null, name varchar(255), primary key (id)) []} [{ create table types (id serial not null, name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 120  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table types (id serial not null, name varchar(255), primary key (id)) []} [{ create table types (id serial not null, name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-76
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-76"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 159  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table users (username varchar(255) not null, enabled boolean, password varchar(255), primary key (username)) []} [{ create table users (username varchar(255) not null, enabled boolean, password varchar(255), primary key (username)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 159  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table users (username varchar(255) not null, enabled boolean, password varchar(255), primary key (username)) []} [{ create table users (username varchar(255) not null, enabled boolean, password varchar(255), primary key (username)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 159  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table users (username varchar(255) not null, enabled boolean, password varchar(255), primary key (username)) []} [{ create table users (username varchar(255) not null, enabled boolean, password varchar(255), primary key (username)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 159  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table users (username varchar(255) not null, enabled boolean, password varchar(255), primary key (username)) []} [{ create table users (username varchar(255) not null, enabled boolean, password varchar(255), primary key (username)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 159  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table users (username varchar(255) not null, enabled boolean, password varchar(255), primary key (username)) []} [{ create table users (username varchar(255) not null, enabled boolean, password varchar(255), primary key (username)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-77
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-77"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 165  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table vet_specialties (vet_id integer not null, specialty_id integer not null, primary key (vet_id, specialty_id)) []} [{ create table vet_specialties (vet_id integer not null, specialty_id integer not null, primary key (vet_id, specialty_id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 165  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table vet_specialties (vet_id integer not null, specialty_id integer not null, primary key (vet_id, specialty_id)) []} [{ create table vet_specialties (vet_id integer not null, specialty_id integer not null, primary key (vet_id, specialty_id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 165  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table vet_specialties (vet_id integer not null, specialty_id integer not null, primary key (vet_id, specialty_id)) []} [{ create table vet_specialties (vet_id integer not null, specialty_id integer not null, primary key (vet_id, specialty_id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 165  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table vet_specialties (vet_id integer not null, specialty_id integer not null, primary key (vet_id, specialty_id)) []} [{ create table vet_specialties (vet_id integer not null, specialty_id integer not null, primary key (vet_id, specialty_id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 165  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table vet_specialties (vet_id integer not null, specialty_id integer not null, primary key (vet_id, specialty_id)) []} [{ create table vet_specialties (vet_id integer not null, specialty_id integer not null, primary key (vet_id, specialty_id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-78
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-78"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 149  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table vets (id serial not null, first_name varchar(255), last_name varchar(255), primary key (id)) []} [{ create table vets (id serial not null, first_name varchar(255), last_name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 149  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table vets (id serial not null, first_name varchar(255), last_name varchar(255), primary key (id)) []} [{ create table vets (id serial not null, first_name varchar(255), last_name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 149  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table vets (id serial not null, first_name varchar(255), last_name varchar(255), primary key (id)) []} [{ create table vets (id serial not null, first_name varchar(255), last_name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 149  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table vets (id serial not null, first_name varchar(255), last_name varchar(255), primary key (id)) []} [{ create table vets (id serial not null, first_name varchar(255), last_name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 149  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table vets (id serial not null, first_name varchar(255), last_name varchar(255), primary key (id)) []} [{ create table vets (id serial not null, first_name varchar(255), last_name varchar(255), primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-79
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-79"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 161  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table visits (id serial not null, visit_date DATE, description varchar(255), pet_id integer, primary key (id)) []} [{ create table visits (id serial not null, visit_date DATE, description varchar(255), pet_id integer, primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 161  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table visits (id serial not null, visit_date DATE, description varchar(255), pet_id integer, primary key (id)) []} [{ create table visits (id serial not null, visit_date DATE, description varchar(255), pet_id integer, primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 161  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table visits (id serial not null, visit_date DATE, description varchar(255), pet_id integer, primary key (id)) []} [{ create table visits (id serial not null, visit_date DATE, description varchar(255), pet_id integer, primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 161  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table visits (id serial not null, visit_date DATE, description varchar(255), pet_id integer, primary key (id)) []} [{ create table visits (id serial not null, visit_date DATE, description varchar(255), pet_id integer, primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 161  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { create table visits (id serial not null, visit_date DATE, description varchar(255), pet_id integer, primary key (id)) []} [{ create table visits (id serial not null, visit_date DATE, description varchar(255), pet_id integer, primary key (id)) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-80
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-80"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 138  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles add constraint UKgbujo9d06xbax50ht1lakf6v0 unique (username, role) []} [{ alter table if exists roles add constraint UKgbujo9d06xbax50ht1lakf6v0 unique (username, role) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 138  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles add constraint UKgbujo9d06xbax50ht1lakf6v0 unique (username, role) []} [{ alter table if exists roles add constraint UKgbujo9d06xbax50ht1lakf6v0 unique (username, role) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 138  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles add constraint UKgbujo9d06xbax50ht1lakf6v0 unique (username, role) []} [{ alter table if exists roles add constraint UKgbujo9d06xbax50ht1lakf6v0 unique (username, role) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 138  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles add constraint UKgbujo9d06xbax50ht1lakf6v0 unique (username, role) []} [{ alter table if exists roles add constraint UKgbujo9d06xbax50ht1lakf6v0 unique (username, role) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 138  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles add constraint UKgbujo9d06xbax50ht1lakf6v0 unique (username, role) []} [{ alter table if exists roles add constraint UKgbujo9d06xbax50ht1lakf6v0 unique (username, role) []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-81
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-81"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 154  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets add constraint FK6teg4kcjcnjhduguft56wcfoa foreign key (owner_id) references owners []} [{ alter table if exists pets add constraint FK6teg4kcjcnjhduguft56wcfoa foreign key (owner_id) references owners []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 154  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets add constraint FK6teg4kcjcnjhduguft56wcfoa foreign key (owner_id) references owners []} [{ alter table if exists pets add constraint FK6teg4kcjcnjhduguft56wcfoa foreign key (owner_id) references owners []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 154  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets add constraint FK6teg4kcjcnjhduguft56wcfoa foreign key (owner_id) references owners []} [{ alter table if exists pets add constraint FK6teg4kcjcnjhduguft56wcfoa foreign key (owner_id) references owners []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 154  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets add constraint FK6teg4kcjcnjhduguft56wcfoa foreign key (owner_id) references owners []} [{ alter table if exists pets add constraint FK6teg4kcjcnjhduguft56wcfoa foreign key (owner_id) references owners []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 154  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets add constraint FK6teg4kcjcnjhduguft56wcfoa foreign key (owner_id) references owners []} [{ alter table if exists pets add constraint FK6teg4kcjcnjhduguft56wcfoa foreign key (owner_id) references owners []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-82
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-82"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 152  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets add constraint FKtmmh1tq8pah5vxf8kuqqplo4p foreign key (type_id) references types []} [{ alter table if exists pets add constraint FKtmmh1tq8pah5vxf8kuqqplo4p foreign key (type_id) references types []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 152  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets add constraint FKtmmh1tq8pah5vxf8kuqqplo4p foreign key (type_id) references types []} [{ alter table if exists pets add constraint FKtmmh1tq8pah5vxf8kuqqplo4p foreign key (type_id) references types []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 152  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets add constraint FKtmmh1tq8pah5vxf8kuqqplo4p foreign key (type_id) references types []} [{ alter table if exists pets add constraint FKtmmh1tq8pah5vxf8kuqqplo4p foreign key (type_id) references types []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 152  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets add constraint FKtmmh1tq8pah5vxf8kuqqplo4p foreign key (type_id) references types []} [{ alter table if exists pets add constraint FKtmmh1tq8pah5vxf8kuqqplo4p foreign key (type_id) references types []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 152  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists pets add constraint FKtmmh1tq8pah5vxf8kuqqplo4p foreign key (type_id) references types []} [{ alter table if exists pets add constraint FKtmmh1tq8pah5vxf8kuqqplo4p foreign key (type_id) references types []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-83
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-83"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 154  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles add constraint FKqmykg2mabwkk1vhpc4526g44k foreign key (username) references users []} [{ alter table if exists roles add constraint FKqmykg2mabwkk1vhpc4526g44k foreign key (username) references users []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 154  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles add constraint FKqmykg2mabwkk1vhpc4526g44k foreign key (username) references users []} [{ alter table if exists roles add constraint FKqmykg2mabwkk1vhpc4526g44k foreign key (username) references users []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 154  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles add constraint FKqmykg2mabwkk1vhpc4526g44k foreign key (username) references users []} [{ alter table if exists roles add constraint FKqmykg2mabwkk1vhpc4526g44k foreign key (username) references users []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 154  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles add constraint FKqmykg2mabwkk1vhpc4526g44k foreign key (username) references users []} [{ alter table if exists roles add constraint FKqmykg2mabwkk1vhpc4526g44k foreign key (username) references users []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 154  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists roles add constraint FKqmykg2mabwkk1vhpc4526g44k foreign key (username) references users []} [{ alter table if exists roles add constraint FKqmykg2mabwkk1vhpc4526g44k foreign key (username) references users []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-84
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-84"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 174  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties add constraint FK35uiboyrpfn1bndrr5jorcj0m foreign key (specialty_id) references specialties []} [{ alter table if exists vet_specialties add constraint FK35uiboyrpfn1bndrr5jorcj0m foreign key (specialty_id) references specialties []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 174  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties add constraint FK35uiboyrpfn1bndrr5jorcj0m foreign key (specialty_id) references specialties []} [{ alter table if exists vet_specialties add constraint FK35uiboyrpfn1bndrr5jorcj0m foreign key (specialty_id) references specialties []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 174  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties add constraint FK35uiboyrpfn1bndrr5jorcj0m foreign key (specialty_id) references specialties []} [{ alter table if exists vet_specialties add constraint FK35uiboyrpfn1bndrr5jorcj0m foreign key (specialty_id) references specialties []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 174  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties add constraint FK35uiboyrpfn1bndrr5jorcj0m foreign key (specialty_id) references specialties []} [{ alter table if exists vet_specialties add constraint FK35uiboyrpfn1bndrr5jorcj0m foreign key (specialty_id) references specialties []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 174  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties add constraint FK35uiboyrpfn1bndrr5jorcj0m foreign key (specialty_id) references specialties []} [{ alter table if exists vet_specialties add constraint FK35uiboyrpfn1bndrr5jorcj0m foreign key (specialty_id) references specialties []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-85
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-85"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 161  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties add constraint FKby1c0fbaa0byaifi63vt18sx9 foreign key (vet_id) references vets []} [{ alter table if exists vet_specialties add constraint FKby1c0fbaa0byaifi63vt18sx9 foreign key (vet_id) references vets []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 161  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties add constraint FKby1c0fbaa0byaifi63vt18sx9 foreign key (vet_id) references vets []} [{ alter table if exists vet_specialties add constraint FKby1c0fbaa0byaifi63vt18sx9 foreign key (vet_id) references vets []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 161  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties add constraint FKby1c0fbaa0byaifi63vt18sx9 foreign key (vet_id) references vets []} [{ alter table if exists vet_specialties add constraint FKby1c0fbaa0byaifi63vt18sx9 foreign key (vet_id) references vets []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 161  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties add constraint FKby1c0fbaa0byaifi63vt18sx9 foreign key (vet_id) references vets []} [{ alter table if exists vet_specialties add constraint FKby1c0fbaa0byaifi63vt18sx9 foreign key (vet_id) references vets []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 161  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists vet_specialties add constraint FKby1c0fbaa0byaifi63vt18sx9 foreign key (vet_id) references vets []} [{ alter table if exists vet_specialties add constraint FKby1c0fbaa0byaifi63vt18sx9 foreign key (vet_id) references vets []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-86
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-86"}
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 152  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists visits add constraint FK6jcifhlqqlsfseu67utlouauy foreign key (pet_id) references pets []} [{ alter table if exists visits add constraint FK6jcifhlqqlsfseu67utlouauy foreign key (pet_id) references pets []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 152  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists visits add constraint FK6jcifhlqqlsfseu67utlouauy foreign key (pet_id) references pets []} [{ alter table if exists visits add constraint FK6jcifhlqqlsfseu67utlouauy foreign key (pet_id) references pets []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 152  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists visits add constraint FK6jcifhlqqlsfseu67utlouauy foreign key (pet_id) references pets []} [{ alter table if exists visits add constraint FK6jcifhlqqlsfseu67utlouauy foreign key (pet_id) references pets []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 152  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists visits add constraint FK6jcifhlqqlsfseu67utlouauy foreign key (pet_id) references pets []} [{ alter table if exists visits add constraint FK6jcifhlqqlsfseu67utlouauy foreign key (pet_id) references pets []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[]
Inside Compare Exact Match &{[P B D E] ClientRequest 152  {  [] [] []} [{  [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} { alter table if exists visits add constraint FK6jcifhlqqlsfseu67utlouauy foreign key (pet_id) references pets []} [{ alter table if exists visits add constraint FK6jcifhlqqlsfseu67utlouauy foreign key (pet_id) references pets []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-87
üê∞ Keploy: 2024-02-15T22:41:56Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-87"}
INFO  JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  UserDetailsServiceAutoConfiguration - 

Using generated security password: b0616574-2c4b-47dc-b9cf-192851955450

This generated password is for development use only. Your security configuration must be updated before running your application in production.

INFO  DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@240a2619, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e3283f6, org.springframework.security.web.context.SecurityContextHolderFilter@63dda940, org.springframework.security.web.header.HeaderWriterFilter@51fe7f15, org.springframework.security.web.authentication.logout.LogoutFilter@5940b14e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@652e345, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7bede4ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@539316bb, org.springframework.security.web.access.ExceptionTranslationFilter@19d53ab4, org.springframework.security.web.access.intercept.AuthorizationFilter@3e0a9b1d]
INFO  EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-9966"]
INFO  TomcatWebServer - Tomcat started on port(s): 9966 (http) with context path '/petclinic'
INFO  PetClinicApplication - Started PetClinicApplication in 9.958 seconds (process running for 10.617)
üê∞ Keploy: 2024-02-15T22:42:09Z 	[34mINFO[0m	starting test for of	{"test case": "test-1", "test set": "test-set-5"}
INFO  [/petclinic] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  DispatcherServlet - Initializing Servlet 'dispatcherServlet'
INFO  DispatcherServlet - Completed initialization in 1 ms
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-1[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:09Z 	[34mINFO[0m	result	{"testcase id": "test-1", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:09Z 	[34mINFO[0m	starting test for of	{"test case": "test-2", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-88
üê∞ Keploy: 2024-02-15T22:42:09Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-88"}
Matched In Binary Matching for sorted!!! mock-89
üê∞ Keploy: 2024-02-15T22:42:09Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-89"}
Matched In Absolute Custom Matching for sorted!!! mock-90
üê∞ Keploy: 2024-02-15T22:42:10Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-90"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-2[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:10Z 	[34mINFO[0m	result	{"testcase id": "test-2", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:10Z 	[34mINFO[0m	starting test for of	{"test case": "test-3", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-91
üê∞ Keploy: 2024-02-15T22:42:10Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-91"}
Matched In Binary Matching for sorted!!! mock-92
üê∞ Keploy: 2024-02-15T22:42:10Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-92"}
Matched In Absolute Custom Matching for sorted!!! mock-93
üê∞ Keploy: 2024-02-15T22:42:10Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-93"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-3[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:10Z 	[34mINFO[0m	result	{"testcase id": "test-3", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	starting test for of	{"test case": "test-4", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-94
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-94"}
Matched In Binary Matching for sorted!!! mock-95
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-95"}
Matched In Absolute Custom Matching for sorted!!! mock-96
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-96"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-4[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	result	{"testcase id": "test-4", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	starting test for of	{"test case": "test-5", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-97
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-97"}
Matched In Binary Matching for sorted!!! mock-98
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-98"}
Matched In Binary Matching for sorted!!! mock-99
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-99"}
Matched In Absolute Custom Matching for sorted!!! mock-100
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-100"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-5[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	result	{"testcase id": "test-5", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	starting test for of	{"test case": "test-6", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-102
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-102"}
Matched In Absolute Custom Matching for sorted!!! mock-103
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-103"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-6[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	result	{"testcase id": "test-6", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	starting test for of	{"test case": "test-7", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-7[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	result	{"testcase id": "test-7", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	starting test for of	{"test case": "test-8", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-105
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-105"}
Matched In Absolute Custom Matching for sorted!!! mock-106
üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-106"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-8[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:11Z 	[34mINFO[0m	result	{"testcase id": "test-8", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	starting test for of	{"test case": "test-10", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-107
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-107"}
Matched In Binary Matching for sorted!!! mock-108
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-108"}
Matched In Absolute Custom Matching for sorted!!! mock-109
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-109"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-10[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	result	{"testcase id": "test-10", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	starting test for of	{"test case": "test-9", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-111
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-111"}
Matched In Absolute Custom Matching for sorted!!! mock-112
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-112"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-9[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	result	{"testcase id": "test-9", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	starting test for of	{"test case": "test-11", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-11[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	result	{"testcase id": "test-11", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	starting test for of	{"test case": "test-12", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-114
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-114"}
Matched In Absolute Custom Matching for sorted!!! mock-115
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-115"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-12[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	result	{"testcase id": "test-12", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	starting test for of	{"test case": "test-13", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-117
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-117"}
Matched In Absolute Custom Matching for sorted!!! mock-118
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-118"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-13[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	result	{"testcase id": "test-13", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	starting test for of	{"test case": "test-14", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-120
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-120"}
Matched In Absolute Custom Matching for sorted!!! mock-121
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-121"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-14[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	result	{"testcase id": "test-14", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	starting test for of	{"test case": "test-15", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-123
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-123"}
Matched In Absolute Custom Matching for sorted!!! mock-124
üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-124"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-15[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:12Z 	[34mINFO[0m	result	{"testcase id": "test-15", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	starting test for of	{"test case": "test-16", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-126
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-126"}
Matched In Absolute Custom Matching for sorted!!! mock-127
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-127"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-16[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	result	{"testcase id": "test-16", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	starting test for of	{"test case": "test-17", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-17[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	result	{"testcase id": "test-17", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	starting test for of	{"test case": "test-18", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-129
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-129"}
Matched In Absolute Custom Matching for sorted!!! mock-130
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-130"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-18[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	result	{"testcase id": "test-18", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	starting test for of	{"test case": "test-19", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-132
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-132"}
Matched In Absolute Custom Matching for sorted!!! mock-133
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-133"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-19[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	result	{"testcase id": "test-19", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	starting test for of	{"test case": "test-20", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-135
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-135"}
Matched In Absolute Custom Matching for sorted!!! mock-136
üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-136"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-20[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:13Z 	[34mINFO[0m	result	{"testcase id": "test-20", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	starting test for of	{"test case": "test-21", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-138
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-138"}
Matched In Absolute Custom Matching for sorted!!! mock-139
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-139"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-21[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	result	{"testcase id": "test-21", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	starting test for of	{"test case": "test-22", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-140
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-140"}
Matched In Binary Matching for sorted!!! mock-141
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-141"}
Matched In Binary Matching for sorted!!! mock-142
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-142"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-143
S_2
[[0 0 0 1]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-143
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-143"}
Matched In Absolute Custom Matching for sorted!!! mock-144
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-144"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-22[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	result	{"testcase id": "test-22", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	starting test for of	{"test case": "test-23", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-146
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-146"}
Matched In Absolute Custom Matching for sorted!!! mock-147
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-147"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-23[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	result	{"testcase id": "test-23", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	starting test for of	{"test case": "test-24", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-148
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-148"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-149
S_2
[[0 0 0 4]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-149
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-149"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-150
S_2
[[0 0 0 3]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-150
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-150"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-151
S_2
[[0 0 0 2]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-151
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-151"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-152
S_2
[[0 0 0 1]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-152
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-152"}
Matched In Absolute Custom Matching for sorted!!! mock-153
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-153"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-24[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	result	{"testcase id": "test-24", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	starting test for of	{"test case": "test-25", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-155
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-155"}
Matched In Absolute Custom Matching for sorted!!! mock-156
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-156"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-25[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	result	{"testcase id": "test-25", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	starting test for of	{"test case": "test-26", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-158
üê∞ Keploy: 2024-02-15T22:42:14Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-158"}
Matched In Absolute Custom Matching for sorted!!! mock-159
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-159"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-26[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	result	{"testcase id": "test-26", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	starting test for of	{"test case": "test-27", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0}]]
Inside Compare Exact Match &{[P B E P B D E] ClientRequest 203  { S_6 [] [] []} [{ S_5 [] [] []} { S_6 [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0 []} [{S_5 BEGIN READ ONLY []} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0}]]
Inside Compare Exact Match &{[P B E P B D E] ClientRequest 203  { S_6 [] [] []} [{ S_5 [] [] []} { S_6 [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0 []} [{S_5 BEGIN READ ONLY []} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0}]]
Inside Compare Exact Match &{[P B E P B D E] ClientRequest 203  { S_6 [] [] []} [{ S_5 [] [] []} { S_6 [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0 []} [{S_5 BEGIN READ ONLY []} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0}]]
Inside Compare Exact Match &{[P B E P B D E] ClientRequest 203  { S_6 [] [] []} [{ S_5 [] [] []} { S_6 [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0 []} [{S_5 BEGIN READ ONLY []} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0}]]
Inside Compare Exact Match &{[P B E P B D E] ClientRequest 203  { S_6 [] [] []} [{ S_5 [] [] []} { S_6 [] [] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0 []} [{S_5 BEGIN READ ONLY []} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-160
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-160"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-161
S_2
[[0 0 0 5]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-161
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-161"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-162
S_2
[[0 0 0 4]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-162
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-162"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-163
S_2
[[0 0 0 3]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-163
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-163"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-164
S_2
[[0 0 0 2]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-164
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-164"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-165
S_2
[[0 0 0 1]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-165
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-165"}
Matched In Absolute Custom Matching for sorted!!! mock-166
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-166"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-27[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	result	{"testcase id": "test-27", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	starting test for of	{"test case": "test-28", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0}]]
Inside Compare Exact Match &{[B E P B D E] ClientRequest 307  {  [1] [[0 0 0 1]] []} [{ S_5 [] [] []} {  [1] [[0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1 [23]} [{ select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1 [23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 1 for mock mock-174
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-174
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-174"}
----- []
----- [1 Sector-2 , Opposite Manipal Hospital, Dwarka New Delhi SARTHAK Shyngle      9958178959]
[]
[]
[]
[]
[]
SRC VALUES [[49] [83 101 99 116 111 114 45 50 32 44 32 79 112 112 111 115 105 116 101 32 77 97 110 105 112 97 108 32 72 111 115 112 105 116 97 108 44 32 68 119 97 114 107 97] [78 101 119 32 68 101 108 104 105] [83 65 82 84 72 65 75] [83 104 121 110 103 108 101] [] [] [] [] [] [57 57 53 56 49 55 56 57 53 57]]
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_7 [] [] []} [{ S_7 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_7 ROLLBACK []} [{S_7 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_7 [] [] []} [{ S_7 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_7 ROLLBACK []} [{S_7 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_7 [] [] []} [{ S_7 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_7 ROLLBACK []} [{S_7 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_7 [] [] []} [{ S_7 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_7 ROLLBACK []} [{S_7 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_7 [] [] []} [{ S_7 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_7 ROLLBACK []} [{S_7 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_7 [] [] []} [{ S_7 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_7 ROLLBACK []} [{S_7 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-167
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-167"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-28[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-28                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT STATUS                    |                   ACTUAL STATUS                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                          200                         |                        400                           |
|                                                      |                                                      |
|                                                                                                             |
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                Connection: [keep-alive]              |                   Connection: []                     |
|                Keep-Alive: [timeout=60]              |                   Keep-Alive: []                     |
|                   Content-Length: []                 |               Content-Length: [122]                  |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "address": "Sector-2 , Opposite Manipal Hospita | +  "className": "org.springframework.orm.jpa.JpaSy   |
|   l, Dwarka",                                        | stemException"                                       |
|      "city": "New Delhi",                            | +  "exMessage": "Unable to extract JDBC value for    |
|      "firstName": "SARTHAK",                         | position `6`"                                        |
|   -  "id": 1,                                        |  }                                                   |
|      "lastName": "Shyngle",                          |                                                      |
|   -  "pets": [                                       |                                                      |
|   -  ],                                              |                                                      |
|      "telephone": "9958178959"                       |                                                      |
|    }                                                 |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	result	{"testcase id": "test-28", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	starting test for of	{"test case": "test-30", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[C B E P B D E] ClientRequest 120  {  [] [] []} [{ S_5 [] [] []} {  [] [] []}] {0 0} {83 S_7} {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { select p1_0.id,p1_0.name from types p1_0 []} [{ select p1_0.id,p1_0.name from types p1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[C B E P B D E] ClientRequest 120  {  [] [] []} [{ S_5 [] [] []} {  [] [] []}] {0 0} {83 S_7} {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { select p1_0.id,p1_0.name from types p1_0 []} [{ select p1_0.id,p1_0.name from types p1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[C B E P B D E] ClientRequest 120  {  [] [] []} [{ S_5 [] [] []} {  [] [] []}] {0 0} {83 S_7} {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { select p1_0.id,p1_0.name from types p1_0 []} [{ select p1_0.id,p1_0.name from types p1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[C B E P B D E] ClientRequest 120  {  [] [] []} [{ S_5 [] [] []} {  [] [] []}] {0 0} {83 S_7} {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { select p1_0.id,p1_0.name from types p1_0 []} [{ select p1_0.id,p1_0.name from types p1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[C B E P B D E] ClientRequest 120  {  [] [] []} [{ S_5 [] [] []} {  [] [] []}] {0 0} {83 S_7} {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { select p1_0.id,p1_0.name from types p1_0 []} [{ select p1_0.id,p1_0.name from types p1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[C B E P B D E] ClientRequest 120  {  [] [] []} [{ S_5 [] [] []} {  [] [] []}] {0 0} {83 S_7} {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { select p1_0.id,p1_0.name from types p1_0 []} [{ select p1_0.id,p1_0.name from types p1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[C B E P B D E] ClientRequest 120  {  [] [] []} [{ S_5 [] [] []} {  [] [] []}] {0 0} {83 S_7} {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { select p1_0.id,p1_0.name from types p1_0 []} [{ select p1_0.id,p1_0.name from types p1_0 []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-173
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-173"}
Matched In Absolute Custom Matching for sorted!!! mock-175
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-175"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-30[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	result	{"testcase id": "test-30", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	starting test for of	{"test case": "test-29", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK}]]
Inside Compare Exact Match &{[B E P B D E] ClientRequest 307  {  [1] [[0 0 0 1]] []} [{ S_5 [] [] []} {  [1] [[0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1 [23]} [{ select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1 [23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 1 for mock mock-174
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-174
üê∞ Keploy: 2024-02-15T22:42:15Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-174"}
----- []
----- [1 Sector-2 , Opposite Manipal Hospital, Dwarka New Delhi SARTHAK Shyngle      9958178959]
[]
[]
[]
[]
[]
SRC VALUES [[49] [83 101 99 116 111 114 45 50 32 44 32 79 112 112 111 115 105 116 101 32 77 97 110 105 112 97 108 32 72 111 115 112 105 116 97 108 44 32 68 119 97 114 107 97] [78 101 119 32 68 101 108 104 105] [83 65 82 84 72 65 75] [83 104 121 110 103 108 101] [] [] [] [] [] [57 57 53 56 49 55 56 57 53 57]]
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_8 [] [] []} [{ S_8 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_8 ROLLBACK []} [{S_8 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_8 [] [] []} [{ S_8 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_8 ROLLBACK []} [{S_8 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_8 [] [] []} [{ S_8 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_8 ROLLBACK []} [{S_8 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_8 [] [] []} [{ S_8 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_8 ROLLBACK []} [{S_8 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_8 [] [] []} [{ S_8 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_8 ROLLBACK []} [{S_8 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 51  { S_8 [] [] []} [{ S_8 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_8 ROLLBACK []} [{S_8 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-171
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-171"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-29[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-29                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT STATUS                    |                   ACTUAL STATUS                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                          200                         |                        400                           |
|                                                      |                                                      |
|                                                                                                             |
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                Keep-Alive: [timeout=60]              |                   Keep-Alive: []                     |
|                   Content-Length: []                 |               Content-Length: [122]                  |
|                Connection: [keep-alive]              |                   Connection: []                     |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "address": "Sector-2 , Opposite Manipal Hospita | +  "className": "org.springframework.orm.jpa.JpaSy   |
|   l, Dwarka",                                        | stemException"                                       |
|      "city": "New Delhi",                            | +  "exMessage": "Unable to extract JDBC value for    |
|      "firstName": "SARTHAK",                         | position `6`"                                        |
|   -  "id": 1,                                        |  }                                                   |
|      "lastName": "Shyngle",                          |                                                      |
|   -  "pets": [                                       |                                                      |
|   -  ],                                              |                                                      |
|      "telephone": "9958178959"                       |                                                      |
|    }                                                 |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	result	{"testcase id": "test-29", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	starting test for of	{"test case": "test-31", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-31[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	result	{"testcase id": "test-31", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	starting test for of	{"test case": "test-32", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK}]]
Inside Compare Exact Match &{[C B E P B D E] ClientRequest 238  {  [0 0 1 1] [[50 48 50 49 45 48 55 45 48 55 32 43 48 48] [68 101 120 116 101 114] [0 0 0 1] [0 0 0 1]] []} [{ S_3 [] [] []} {  [0 0 1 1] [[50 48 50 49 45 48 55 45 48 55 32 43 48 48] [68 101 120 116 101 114] [0 0 0 1] [0 0 0 1]] []}] {0 0} {83 S_8} {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]} [{ insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK}]]
Inside Compare Exact Match &{[C B E P B D E] ClientRequest 238  {  [0 0 1 1] [[50 48 50 49 45 48 55 45 48 55 32 43 48 48] [68 101 120 116 101 114] [0 0 0 1] [0 0 0 1]] []} [{ S_3 [] [] []} {  [0 0 1 1] [[50 48 50 49 45 48 55 45 48 55 32 43 48 48] [68 101 120 116 101 114] [0 0 0 1] [0 0 0 1]] []}] {0 0} {83 S_8} {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]} [{ insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK}]]
Inside Compare Exact Match &{[C B E P B D E] ClientRequest 238  {  [0 0 1 1] [[50 48 50 49 45 48 55 45 48 55 32 43 48 48] [68 101 120 116 101 114] [0 0 0 1] [0 0 0 1]] []} [{ S_3 [] [] []} {  [0 0 1 1] [[50 48 50 49 45 48 55 45 48 55 32 43 48 48] [68 101 120 116 101 114] [0 0 0 1] [0 0 0 1]] []}] {0 0} {83 S_8} {} {[]} {} {80 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} { insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]} [{ insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for sorted!!! mock-177
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-177"}
Matched In Absolute Custom Matching for sorted!!! mock-178
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-178"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-32[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	result	{"testcase id": "test-32", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	starting test for of	{"test case": "test-34", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-179
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-179"}
Matched In Binary Matching for sorted!!! mock-180
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-180"}
Matched In Binary Matching for sorted!!! mock-181
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-181"}
Matched In Absolute Custom Matching for sorted!!! mock-182
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-182"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-34[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	result	{"testcase id": "test-34", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	starting test for of	{"test case": "test-33", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-184
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-184"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-185
S_2
[[0 0 0 1]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-185
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-185"}
Matched In Absolute Custom Matching for sorted!!! mock-186
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-186"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-33[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	result	{"testcase id": "test-33", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	starting test for of	{"test case": "test-35", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-187
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-187"}
Matched In Binary Matching for sorted!!! mock-188
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-188"}
Matched In Binary Matching for sorted!!! mock-189
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-189"}
Matched In Absolute Custom Matching for sorted!!! mock-193
üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-193"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-35[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:16Z 	[34mINFO[0m	result	{"testcase id": "test-35", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	starting test for of	{"test case": "test-36", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-36[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	result	{"testcase id": "test-36", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	starting test for of	{"test case": "test-37", "test set": "test-set-5"}
Handling Case 1 for mock mock-192
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-192
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-192"}
----- []
----- [1 2024-01-17 For vaccination 1]
SRC VALUES [[49] [50 48 50 52 45 48 49 45 49 55] [70 111 114 32 118 97 99 99 105 110 97 116 105 111 110] [49]]
Matched In Absolute Custom Matching for sorted!!! mock-225
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-225"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-37[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	result	{"testcase id": "test-37", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	starting test for of	{"test case": "test-38", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-195
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-195"}
Matched In Binary Matching for sorted!!! mock-196
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-196"}
Matched In Binary Matching for sorted!!! mock-197
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-197"}
Matched In Absolute Custom Matching for sorted!!! mock-198
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-198"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-38[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	result	{"testcase id": "test-38", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	starting test for of	{"test case": "test-39", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-200
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-200"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-201
S_2
[[0 0 0 1]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-201
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-201"}
Matched In Absolute Custom Matching for sorted!!! mock-202
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-202"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-39[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	result	{"testcase id": "test-39", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	starting test for of	{"test case": "test-40", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-210
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-210"}
Matched In Binary Matching for sorted!!! mock-204
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-204"}
Matched In Binary Matching for sorted!!! mock-205
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-205"}
Matched In Absolute Custom Matching for sorted!!! mock-206
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-206"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-40[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	result	{"testcase id": "test-40", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	starting test for of	{"test case": "test-41", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-208
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-208"}
Matched In Absolute Custom Matching for sorted!!! mock-209
üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-209"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-41[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:17Z 	[34mINFO[0m	result	{"testcase id": "test-41", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	starting test for of	{"test case": "test-42", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 1]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-210
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-210"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1}]]
Inside Compare Exact Match &{[P B D E] ClientRequest 123  { S_10 [1] [[0 0 0 1]] []} [{ S_10 [1] [[0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1 [23]} [{S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1 [23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1}]]
Inside Compare Exact Match &{[P B D E] ClientRequest 123  { S_10 [1] [[0 0 0 1]] []} [{ S_10 [1] [[0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1 [23]} [{S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1 [23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1}]]
Inside Compare Exact Match &{[P B D E] ClientRequest 123  { S_10 [1] [[0 0 0 1]] []} [{ S_10 [1] [[0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1 [23]} [{S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1 [23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1}]]
Inside Compare Exact Match &{[P B D E] ClientRequest 123  { S_10 [1] [[0 0 0 1]] []} [{ S_10 [1] [[0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1 [23]} [{S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1 [23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1}]]
Inside Compare Exact Match &{[P B D E] ClientRequest 123  { S_10 [1] [[0 0 0 1]] []} [{ S_10 [1] [[0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {80 } { 0} [{ 0}] {} {0 [] [] 0} {} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1 [23]} [{S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1 [23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-180
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-180"}
Matched In Binary Matching for sorted!!! mock-212
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-212"}
Matched In Absolute Custom Matching for sorted!!! mock-213
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-213"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-42[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	result	{"testcase id": "test-42", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	starting test for of	{"test case": "test-43", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-91 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-97 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-140 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-148 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-160 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Handling Case 3 for mock mock-243
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-412 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-427
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-215
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-215"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-216
S_2
[[0 0 0 5]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-216
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-216"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-217
S_2
[[0 0 0 4]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-217
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-217"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-218
S_2
[[0 0 0 3]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-218
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-218"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-219
S_2
[[0 0 0 2]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-219
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-219"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-220
S_2
[[0 0 0 1]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-220
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-220"}
Matched In Absolute Custom Matching for sorted!!! mock-221
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-221"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-43[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	result	{"testcase id": "test-43", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	starting test for of	{"test case": "test-44", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-223
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-223"}
Matched In Absolute Custom Matching for sorted!!! mock-224
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-224"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-44[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	result	{"testcase id": "test-44", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	starting test for of	{"test case": "test-45", "test set": "test-set-5"}
Handling Case 1 for mock mock-229
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-229
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-229"}
----- []
----- [3 HNO A -504 SECTOR-2 ANMOL APPTT Bangalore Shubham Jain      9958178923]
[37 168 167]
[]
[]
[]
[]
[]
SRC VALUES [[51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [66 97 110 103 97 108 111 114 101] [83 104 117 98 104 97 109] [37 168 167] [] [] [] [] [] [57 57 53 56 49 55 56 57 50 51]]
Matched In Absolute Custom Matching for sorted!!! mock-230
üê∞ Keploy: 2024-02-15T22:42:18Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-230"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-45[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-45                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|   [{"name":"Dog","id":1},{"name":"Cat","id":2},{"nam | [{"name":"HNO A -504 SECTOR-2 ANMOL APPTT","id":3}   |
|   e":"Roooster","id":3},{"name":"Rabbit","id":4}]    | ]                                                    |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	result	{"testcase id": "test-45", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	starting test for of	{"test case": "test-46", "test set": "test-set-5"}
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-223
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-223"}
Matched In Absolute Custom Matching for sorted!!! mock-230
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-230"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-46[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	result	{"testcase id": "test-46", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	starting test for of	{"test case": "test-47", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-47[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	result	{"testcase id": "test-47", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	starting test for of	{"test case": "test-48", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-232
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-232"}
Matched In Absolute Custom Matching for sorted!!! mock-233
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-233"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-48[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	result	{"testcase id": "test-48", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	starting test for of	{"test case": "test-49", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-234
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-234"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-235
S_10
[[0 0 0 2]]
[1]
[1 0]
Matched In Absolute Custom Matching for sorted!!! mock-235
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-235"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-236
S_11
[[0 0 0 2]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-236
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-236"}
Matched In Absolute Custom Matching for sorted!!! mock-237
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-237"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-49[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	result	{"testcase id": "test-49", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	starting test for of	{"test case": "test-50", "test set": "test-set-5"}
Handling Case 1 for mock mock-243
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-243
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-243"}
----- []
----- [3 HNO A -504 SECTOR-2 ANMOL APPTT Bangalore Shubham Jain 3 2 2018-07-04 Sweetiee 2 9958178923]
[37 168 167]
[75 7 158 182 39 158]
SRC VALUES [[51] [72 78 79 32 65 32 45 53 48 52 32 83 69 67 84 79 82 45 50 32 65 78 77 79 76 32 65 80 80 84 84] [66 97 110 103 97 108 111 114 101] [83 104 117 98 104 97 109] [37 168 167] [51] [50] [50 48 49 56 45 48 55 45 48 52] [75 7 158 182 39 158] [50] [57 57 53 56 49 55 56 57 50 51]]
INFO  DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.HibernateException: Unable to extract JDBC value for position `2`
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.readCurrentRowValues(JdbcValuesResultSetImpl.java:271)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advance(JdbcValuesResultSetImpl.java:244)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:177)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:140)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:110)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:72)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4401)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4391)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:597)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:570)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:224)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:363)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:113)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:118)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1244)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1232)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:195)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:161)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:108)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:161)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2336)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2303)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:307)
	at jdk.proxy2/jdk.proxy2.$Proxy151.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:313)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:163)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy2/jdk.proxy2.$Proxy155.findById(Unknown Source)
	at org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetById(ClinicServiceImpl.java:239)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at org.springframework.samples.petclinic.service.ClinicServiceImpl$$SpringCGLIB$$0.findPetById(<generated>)
	at org.springframework.samples.petclinic.rest.controller.PetRestController.getPet(PetRestController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at org.springframework.samples.petclinic.rest.controller.PetRestController$$SpringCGLIB$$0.getPet(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: Bad value for type timestamp/date/time: HNO A -504 SECTOR-2 ANMOL APPTT
	at org.postgresql.jdbc.TimestampUtils.parseBackendTimestamp(TimestampUtils.java:363)
	at org.postgresql.jdbc.TimestampUtils.toTimestamp(TimestampUtils.java:395)
	at org.postgresql.jdbc.TimestampUtils.toDate(TimestampUtils.java:637)
	at org.postgresql.jdbc.PgResultSet.getDate(PgResultSet.java:532)
	at org.postgresql.jdbc.PgResultSet.getDate(PgResultSet.java:2722)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.jdbc.DateJdbcType$2.doExtract(DateJdbcType.java:104)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.readCurrentRowValues(JdbcValuesResultSetImpl.java:263)
	... 206 common frames omitted
Caused by: java.lang.NumberFormatException: Trailing junk on timestamp: 'HNO A -504 SECTOR-2 ANMOL APPTT'
	at org.postgresql.jdbc.TimestampUtils.parseBackendTimestamp(TimestampUtils.java:353)
	... 214 common frames omitted
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_12 [] [] []} [{ S_12 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_12 ROLLBACK []} [{S_12 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_12 [] [] []} [{ S_12 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_12 ROLLBACK []} [{S_12 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_12 [] [] []} [{ S_12 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_12 ROLLBACK []} [{S_12 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_12 [] [] []} [{ S_12 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_12 ROLLBACK []} [{S_12 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_12 [] [] []} [{ S_12 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_12 ROLLBACK []} [{S_12 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-238
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-238"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-50[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-50                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT STATUS                    |                   ACTUAL STATUS                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                          200                         |                        400                           |
|                                                      |                                                      |
|                                                                                                             |
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                Connection: [keep-alive]              |                   Connection: []                     |
|                Keep-Alive: [timeout=60]              |                   Keep-Alive: []                     |
|                   Content-Length: []                 |               Content-Length: [122]                  |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "birthDate": "2018-07-04",                      | +  "className": "org.springframework.orm.jpa.JpaSy   |
|   -  "id": 2,                                        | stemException"                                       |
|   -  "name": "Sweetiee",                             | +  "exMessage": "Unable to extract JDBC value for    |
|   -  "ownerId": 3,                                   | position `2`"                                        |
|   -  "type": {                                       |  }                                                   |
|   -    "id": 2,                                      |                                                      |
|   -    "name": "Cat"                                 |                                                      |
|   -  },                                              |                                                      |
|   -  "visits": [                                     |                                                      |
|   -  ]                                               |                                                      |
|    }                                                 |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:19Z 	[34mINFO[0m	result	{"testcase id": "test-50", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	starting test for of	{"test case": "test-51", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_12} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_12} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_12} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_12} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_12} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-223
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-223"}
Matched In Absolute Custom Matching for sorted!!! mock-246
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-246"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-51[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-51                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "id": 3,                                        |    "id": 3,                                          |
|      "pets": [                                       |    "pets": [                                         |
|   -    0: {                                          |    ],                                                |
|          "birthDate": "2018-07-04",                  |  }                                                   |
|   -      "id": 2,                                    |                                                      |
|   -      "name": "Sweetiee",                         |                                                      |
|   -      "ownerId": 3,                               |                                                      |
|   -      "type": {                                   |                                                      |
|   -        "id": 2,                                  |                                                      |
|   -        "name": "Cat"                             |                                                      |
|   -      },                                          |                                                      |
|   -      "visits": [                                 |                                                      |
|   -      ]                                           |                                                      |
|   -    }                                             |                                                      |
|      ],                                              |                                                      |
|    }                                                 |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	result	{"testcase id": "test-51", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	starting test for of	{"test case": "test-52", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-52[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	result	{"testcase id": "test-52", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	starting test for of	{"test case": "test-53", "test set": "test-set-5"}
Handling Case 1 for mock mock-248
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-248
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-248"}
----- []
----- [3 2024-01-17 Dont know 2]
SRC VALUES [[51] [50 48 50 52 45 48 49 45 49 55] [68 111 110 116 32 107 110 111 119] [50]]
Matched In Absolute Custom Matching for sorted!!! mock-266
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-266"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-53[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	result	{"testcase id": "test-53", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	starting test for of	{"test case": "test-54", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 3]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-251
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-251"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-252
S_10
[[0 0 0 2]]
[1]
[1 0]
Matched In Absolute Custom Matching for sorted!!! mock-252
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-252"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-253
S_11
[[0 0 0 2]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-253
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-253"}
Matched In Absolute Custom Matching for sorted!!! mock-254
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-254"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-54[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	result	{"testcase id": "test-54", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	starting test for of	{"test case": "test-56", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-270
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-270
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-91 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-97 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-140 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-148 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-160 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Handling Case 3 for mock mock-243
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-412 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:20Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-427
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-256
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-256"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-257
S_2
[[0 0 0 5]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-257
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-257"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-258
S_2
[[0 0 0 4]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-258
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-258"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-259
S_2
[[0 0 0 3]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-259
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-259"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-260
S_2
[[0 0 0 2]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-260
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-260"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-261
S_2
[[0 0 0 1]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-261
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-261"}
Matched In Absolute Custom Matching for sorted!!! mock-262
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-262"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-56[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	result	{"testcase id": "test-56", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	starting test for of	{"test case": "test-55", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-264
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-264"}
Matched In Absolute Custom Matching for sorted!!! mock-265
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-265"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-55[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	result	{"testcase id": "test-55", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	starting test for of	{"test case": "test-58", "test set": "test-set-5"}
Handling Case 1 for mock mock-270
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-270
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-270"}
----- []
----- [5 Aecs layout, Singasandra  NEW DELHI Gourav Kumar      9958178959]
[]
[]
[]
[]
[]
SRC VALUES [[53] [65 101 99 115 32 108 97 121 111 117 116 44 32 83 105 110 103 97 115 97 110 100 114 97 32] [78 69 87 32 68 69 76 72 73] [71 111 117 114 97 118] [75 117 109 97 114] [] [] [] [] [] [57 57 53 56 49 55 56 57 53 57]]
Matched In Absolute Custom Matching for sorted!!! mock-271
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-271"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-58[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-58                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|   [{"name":"Dog","id":1},{"name":"Cat","id":2},{"nam | [{"name":"Aecs layout, Singasandra ","id":5}]        |
|   e":"Roooster","id":3},{"name":"Rabbit","id":4}]    |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	result	{"testcase id": "test-58", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	starting test for of	{"test case": "test-57", "test set": "test-set-5"}
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-264
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-264"}
Matched In Absolute Custom Matching for sorted!!! mock-271
üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-271"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-57[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:21Z 	[34mINFO[0m	result	{"testcase id": "test-57", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	starting test for of	{"test case": "test-59", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-59[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	result	{"testcase id": "test-59", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	starting test for of	{"test case": "test-60", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-273
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-273"}
Matched In Absolute Custom Matching for sorted!!! mock-274
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-274"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-60[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	result	{"testcase id": "test-60", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	starting test for of	{"test case": "test-61", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-275
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-275"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-276
S_10
[[0 0 0 3]]
[1]
[1 0]
Matched In Absolute Custom Matching for sorted!!! mock-276
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-276"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-277
S_11
[[0 0 0 3]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-277
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-277"}
Matched In Absolute Custom Matching for sorted!!! mock-278
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-278"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-61[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	result	{"testcase id": "test-61", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	starting test for of	{"test case": "test-62", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-280
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-280"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-281
S_2
[[0 0 0 5]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-281
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-281"}
Matched In Absolute Custom Matching for sorted!!! mock-282
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-282"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-62[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	result	{"testcase id": "test-62", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:22Z 	[34mINFO[0m	starting test for of	{"test case": "test-63", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-283
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-283"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-284
S_10
[[0 0 0 3]]
[1]
[1 0]
Matched In Absolute Custom Matching for sorted!!! mock-284
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-284"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-285
S_11
[[0 0 0 3]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-285
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-285"}
Matched In Absolute Custom Matching for sorted!!! mock-289
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-289"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-63[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	result	{"testcase id": "test-63", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	starting test for of	{"test case": "test-64", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-64[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	result	{"testcase id": "test-64", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	starting test for of	{"test case": "test-65", "test set": "test-set-5"}
Handling Case 1 for mock mock-288
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-288
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-288"}
----- []
----- [4 2024-02-21 Petrol Slips for this financial year  3]
SRC VALUES [[52] [50 48 50 52 45 48 50 45 50 49] [80 101 116 114 111 108 32 83 108 105 112 115 32 102 111 114 32 116 104 105 115 32 102 105 110 97 110 99 105 97 108 32 121 101 97 114 32] [51]]
Matched In Absolute Custom Matching for sorted!!! mock-294
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-294"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-65[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	result	{"testcase id": "test-65", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	starting test for of	{"test case": "test-66", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 5]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-291
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-291"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-292
S_10
[[0 0 0 3]]
[1]
[1 0]
Matched In Absolute Custom Matching for sorted!!! mock-292
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-292"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-293
S_11
[[0 0 0 3]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-293
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-293"}
Matched In Absolute Custom Matching for sorted!!! mock-297
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-297"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-66[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	result	{"testcase id": "test-66", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	starting test for of	{"test case": "test-67", "test set": "test-set-5"}
Handling Case 1 for mock mock-296
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-296
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-296"}
----- []
----- [1 ENT]
SRC VALUES [[49] [69 78 84]]
----- []
----- [2 Eyes]
[19 39 172]
SRC VALUES [[50] [19 39 172]]
----- []
----- [3 Cardio]
SRC VALUES [[51] [67 97 114 100 105 111]]
Matched In Absolute Custom Matching for sorted!!! mock-306
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-306"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-67[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-67                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|   [{"id":1,"name":"ENT"},{"id":2,"name":"Eyes"},{"id | [{"id":1,"name":"ENT"},{"id":2,"name":"\u0013'ÔøΩ"     |
|   ":3,"name":"Cardio"}]                              | },{"id":3,"name":"Cardio"}]                          |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:23Z 	[34mINFO[0m	result	{"testcase id": "test-67", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	starting test for of	{"test case": "test-68", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-299
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-299"}
Matched In Binary Matching for sorted!!! mock-300
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-300"}
Matched In Absolute Custom Matching for sorted!!! mock-301
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-301"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-68[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	result	{"testcase id": "test-68", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	starting test for of	{"test case": "test-69", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-302
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-302"}
Matched In Binary Matching for sorted!!! mock-303
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-303"}
Matched In Binary Matching for sorted!!! mock-304
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-304"}
Matched In Absolute Custom Matching for sorted!!! mock-305
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-305"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-69[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	result	{"testcase id": "test-69", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	starting test for of	{"test case": "test-71", "test set": "test-set-5"}
Handling Case 1 for mock mock-310
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-310
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-310"}
----- []
----- [1 Qwerty Gupta   ]
[]
[]
[]
SRC VALUES [[49] [81 119 101 114 116 121] [71 117 112 116 97] [] [] []]
INFO  DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.HibernateException: Unable to extract JDBC value for position `4`
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.readCurrentRowValues(JdbcValuesResultSetImpl.java:271)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advance(JdbcValuesResultSetImpl.java:244)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:177)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:140)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:110)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:72)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4401)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4391)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:597)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:570)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:224)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:363)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:113)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:118)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1244)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1232)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:195)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:161)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:108)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:161)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2336)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2303)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:307)
	at jdk.proxy2/jdk.proxy2.$Proxy151.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:313)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:163)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy2/jdk.proxy2.$Proxy158.findById(Unknown Source)
	at org.springframework.samples.petclinic.service.ClinicServiceImpl.findVetById(ClinicServiceImpl.java:115)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at org.springframework.samples.petclinic.service.ClinicServiceImpl$$SpringCGLIB$$0.findVetById(<generated>)
	at org.springframework.samples.petclinic.rest.controller.VetRestController.getVet(VetRestController.java:69)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at org.springframework.samples.petclinic.rest.controller.VetRestController$$SpringCGLIB$$0.getVet(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: Bad value for type int : 
	at org.postgresql.jdbc.PgResultSet.toInt(PgResultSet.java:3205)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2422)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.jdbc.IntegerJdbcType$2.doExtract(IntegerJdbcType.java:88)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.readCurrentRowValues(JdbcValuesResultSetImpl.java:263)
	... 206 common frames omitted
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_13 [] [] []} [{ S_13 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_13 ROLLBACK []} [{S_13 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_13 [] [] []} [{ S_13 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_13 ROLLBACK []} [{S_13 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_13 [] [] []} [{ S_13 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_13 ROLLBACK []} [{S_13 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_13 [] [] []} [{ S_13 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_13 ROLLBACK []} [{S_13 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_13 [] [] []} [{ S_13 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_13 ROLLBACK []} [{S_13 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-307
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-307"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-71[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-71                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT STATUS                    |                   ACTUAL STATUS                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                          200                         |                        400                           |
|                                                      |                                                      |
|                                                                                                             |
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                Connection: [keep-alive]              |                   Connection: []                     |
|                Keep-Alive: [timeout=60]              |                   Keep-Alive: []                     |
|                   Content-Length: []                 |               Content-Length: [122]                  |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "firstName": "Qwerty",                          | +  "className": "org.springframework.orm.jpa.JpaSy   |
|   -  "id": 1,                                        | stemException"                                       |
|      "lastName": "Gupta",                            | +  "exMessage": "Unable to extract JDBC value for    |
|   -  "specialties": [                                | position `4`"                                        |
|   -  ]                                               |  }                                                   |
|    }                                                 |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	result	{"testcase id": "test-71", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	starting test for of	{"test case": "test-70", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-309
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-309"}
Matched In Absolute Custom Matching for sorted!!! mock-318
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-318"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-70[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	result	{"testcase id": "test-70", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	starting test for of	{"test case": "test-72", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-72[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	result	{"testcase id": "test-72", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:24Z 	[34mINFO[0m	starting test for of	{"test case": "test-73", "test set": "test-set-5"}
Handling Case 1 for mock mock-313
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-313
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-313"}
----- []
----- [1 Qwerty Gupta   ]
[]
[]
[]
SRC VALUES [[49] [81 119 101 114 116 121] [71 117 112 116 97] [] [] []]
INFO  DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.HibernateException: Unable to extract JDBC value for position `4`
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.readCurrentRowValues(JdbcValuesResultSetImpl.java:271)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advance(JdbcValuesResultSetImpl.java:244)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:177)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:140)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:110)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:72)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4401)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4391)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:597)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:570)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:224)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:363)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:113)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:118)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1244)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1232)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:195)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:161)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:108)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:161)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2336)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2303)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:307)
	at jdk.proxy2/jdk.proxy2.$Proxy151.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:313)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:163)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy2/jdk.proxy2.$Proxy158.findById(Unknown Source)
	at org.springframework.samples.petclinic.service.ClinicServiceImpl.findVetById(ClinicServiceImpl.java:115)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at org.springframework.samples.petclinic.service.ClinicServiceImpl$$SpringCGLIB$$0.findVetById(<generated>)
	at org.springframework.samples.petclinic.rest.controller.VetRestController.updateVet(VetRestController.java:89)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at org.springframework.samples.petclinic.rest.controller.VetRestController$$SpringCGLIB$$0.updateVet(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:734)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: Bad value for type int : 
	at org.postgresql.jdbc.PgResultSet.toInt(PgResultSet.java:3205)
	at org.postgresql.jdbc.PgResultSet.getInt(PgResultSet.java:2422)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.jdbc.IntegerJdbcType$2.doExtract(IntegerJdbcType.java:88)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.readCurrentRowValues(JdbcValuesResultSetImpl.java:263)
	... 206 common frames omitted
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_14 [] [] []} [{ S_14 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_14 ROLLBACK []} [{S_14 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_14 [] [] []} [{ S_14 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_14 ROLLBACK []} [{S_14 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_14 [] [] []} [{ S_14 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_14 ROLLBACK []} [{S_14 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_14 [] [] []} [{ S_14 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_14 ROLLBACK []} [{S_14 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_14 [] [] []} [{ S_14 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_14 ROLLBACK []} [{S_14 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-312
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-312"}
üê∞ Keploy: 2024-02-15T22:42:25Z 	[31mERROR[0m	cannot convert json string into json object	{"error": "unexpected end of JSON input"}
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	result	{"testcase id": "test-73", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	starting test for of	{"test case": "test-74", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-320
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-320"}
Matched In Binary Matching for sorted!!! mock-321
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-321"}
Matched In Binary Matching for sorted!!! mock-322
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-322"}
Matched In Absolute Custom Matching for sorted!!! mock-323
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-323"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-74[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	result	{"testcase id": "test-74", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	starting test for of	{"test case": "test-75", "test set": "test-set-5"}
Handling Case 1 for mock mock-89
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for Unsorted mock-89
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-89"}
----- []
----- [1 SARTHAK Shyngle Sector-2 , Opposite Manipal Hospital, Dwarka New Delhi 9958178959]
SRC VALUES [[49] [83 65 82 84 72 65 75] [83 104 121 110 103 108 101] [83 101 99 116 111 114 45 50 32 44 32 79 112 112 111 115 105 116 101 32 77 97 110 105 112 97 108 32 72 111 115 112 105 116 97 108 44 32 68 119 97 114 107 97] [78 101 119 32 68 101 108 104 105] [57 57 53 56 49 55 56 57 53 57]]
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_16} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_16} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_16} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_16} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_16} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-326
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-326"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-75[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-75                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|   [{"id":1,"name":"ENT"},{"id":2,"name":"Eyes"},{"id | [{"id":1,"name":"SARTHAK"}]                          |
|   ":3,"name":"Cardio"}]                              |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	result	{"testcase id": "test-75", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	starting test for of	{"test case": "test-76", "test set": "test-set-5"}
Handling Case 1 for mock mock-332
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-332
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-332"}
----- []
----- [1 Qwerty Gupta]
SRC VALUES [[49] [81 119 101 114 116 121] [71 117 112 116 97]]
----- []
----- [2 Qwerty Sharma]
SRC VALUES [[50] [81 119 101 114 116 121] [83 104 97 114 109 97]]
----- []
----- [3 Maadhav Jain]
[37 168 167]
SRC VALUES [[51] [77 97 97 100 104 97 118] [37 168 167]]
Matched In Binary Matching for sorted!!! mock-329
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-329"}
Matched In Absolute Custom Matching for sorted!!! mock-336
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-336"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-76[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-76                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                Location: [/api/vets/3]               |              Location: [/api/vets/1]                 |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|   -  "id": 3,                                        | +  "id": 1,                                          |
|      "specialties": [                                |    "specialties": [                                  |
|        : {                                           |      : {                                             |
|          "id": 3,                                    |        "id": 3,                                      |
|          "name": "Cardio"                            |        "name": "Cardio"                              |
|        }                                             |      }                                               |
|      ]                                               |    ]                                                 |
|    }                                                 |  }                                                   |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	result	{"testcase id": "test-76", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	starting test for of	{"test case": "test-77", "test set": "test-set-5"}
Handling Case 1 for mock mock-332
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-332
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-332"}
----- []
----- [1 Qwerty Gupta]
SRC VALUES [[49] [81 119 101 114 116 121] [71 117 112 116 97]]
----- []
----- [2 Qwerty Sharma]
SRC VALUES [[50] [81 119 101 114 116 121] [83 104 97 114 109 97]]
----- []
----- [3 Maadhav Jain]
[37 168 167]
SRC VALUES [[51] [77 97 97 100 104 97 118] [37 168 167]]
Handling Case 2 for mock mock-333
Inside Prepared Statement
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-333 ***  3 [1 1 0]
datarow.RowValues 3
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 3
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 3
Matched In Absolute Custom Matching for sorted!!! mock-333
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-333"}
----- []
----- [AAAAAw== AAAAAw== Cardio]
[0 0 0 3]
[0 0 0 3]
SRC VALUES [[0 0 0 3] [0 0 0 3] [67 97 114 100 105 111]]
Handling Case 2 for mock mock-334
Inside Prepared Statement
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-334 ***  3 [1 1 0]
datarow.RowValues 3
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 3
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 3
Matched In Absolute Custom Matching for sorted!!! mock-334
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-334"}
----- []
----- [AAAAAg== AAAAAg== Eyes]
[0 0 0 2]
[0 0 0 2]
[19 39 172]
SRC VALUES [[0 0 0 2] [0 0 0 2] [19 39 172]]
Handling Case 2 for mock mock-335
Inside Prepared Statement
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-335 ***  3 [1 1 0]
datarow.RowValues 3
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 3
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 3
Matched In Absolute Custom Matching for sorted!!! mock-335
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-335"}
----- []
----- [AAAAAQ== AAAAAQ== ENT]
[0 0 0 1]
[0 0 0 1]
SRC VALUES [[0 0 0 1] [0 0 0 1] [69 78 84]]
Matched In Absolute Custom Matching for sorted!!! mock-341
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-341"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-77[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-77                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|   [{"firstName":"Qwerty","lastName":"Gupta","special | [{"firstName":"Qwerty","lastName":"Gupta","special   |
|   ties":[{"id":1,"name":"ENT"}],"id":1},{"firstName" | ties":[{"id":1,"name":"ENT"}],"id":1},{"firstName"   |
|   :"Qwerty","lastName":"Sharma","specialties":[{"id" | :"Qwerty","lastName":"Sharma","specialties":[{"id"   |
|   :2,"name":"Eyes"}],"id":2},{"firstName":"Maadhav", | :2,"name":"\u0013'ÔøΩ"}],"id":2},{"firstName":"Maa     |
|   "lastName":"Jain","specialties":[{"id":3,"name":"C | dhav","lastName":"%ÔøΩÔøΩ","specialties":[{"id":3,       |
|   ardio"}],"id":3}]                                  | "name":"Cardio"}],"id":3}]                           |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:25Z 	[34mINFO[0m	result	{"testcase id": "test-77", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	starting test for of	{"test case": "test-78", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-78[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	result	{"testcase id": "test-78", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	starting test for of	{"test case": "test-79", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-338
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-338"}
Matched In Binary Matching for sorted!!! mock-339
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-339"}
Matched In Binary Matching for sorted!!! mock-340
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-340"}
Matched In Absolute Custom Matching for sorted!!! mock-346
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-346"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-79[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	result	{"testcase id": "test-79", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	starting test for of	{"test case": "test-80", "test set": "test-set-5"}
Handling Case 1 for mock mock-343
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-343
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-343"}
----- []
----- [1 Qwerty Gupta]
SRC VALUES [[49] [81 119 101 114 116 121] [71 117 112 116 97]]
----- []
----- [2 Qwerty Sharma]
SRC VALUES [[50] [81 119 101 114 116 121] [83 104 97 114 109 97]]
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 59  { S_15 [1] [[0 0 0 2]] [1 1 0]} [{ S_15 [1] [[0 0 0 2]] [1 1 0]}] {0 0} {83 S_17} {} {[]} {} {0 } { 0} [{ 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 59  { S_15 [1] [[0 0 0 2]] [1 1 0]} [{ S_15 [1] [[0 0 0 2]] [1 1 0]}] {0 0} {83 S_17} {} {[]} {} {0 } { 0} [{ 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 59  { S_15 [1] [[0 0 0 2]] [1 1 0]} [{ S_15 [1] [[0 0 0 2]] [1 1 0]}] {0 0} {83 S_17} {} {[]} {} {0 } { 0} [{ 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 59  { S_15 [1] [[0 0 0 2]] [1 1 0]} [{ S_15 [1] [[0 0 0 2]] [1 1 0]}] {0 0} {83 S_17} {} {[]} {} {0 } { 0} [{ 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 59  { S_15 [1] [[0 0 0 2]] [1 1 0]} [{ S_15 [1] [[0 0 0 2]] [1 1 0]}] {0 0} {83 S_17} {} {[]} {} {0 } { 0} [{ 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-236
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-236"}
Handling Case 2 for mock mock-344
Inside Prepared Statement
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-344 ***  3 [1 1 0]
datarow.RowValues 3
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 3
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 3
Matched In Absolute Custom Matching for sorted!!! mock-344
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-344"}
----- []
----- [AAAAAg== AAAAAg== Eyes]
[0 0 0 2]
[0 0 0 2]
[19 39 172]
SRC VALUES [[0 0 0 2] [0 0 0 2] [19 39 172]]
Matched In Absolute Custom Matching for sorted!!! mock-360
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-360"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-80[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-80                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|   [{"firstName":"Qwerty","lastName":"Gupta","special | [{"firstName":"Qwerty","lastName":"Gupta","special   |
|   ties":[{"id":1,"name":"ENT"}],"id":1},{"firstName" | ties":[],"id":1},{"firstName":"Qwerty","lastName":   |
|   :"Qwerty","lastName":"Sharma","specialties":[{"id" | "Sharma","specialties":[],"id":2}]                   |
|   :2,"name":"Eyes"}],"id":2}]                        |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	result	{"testcase id": "test-80", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	starting test for of	{"test case": "test-81", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_4 , conn-  0 and current identifier is S_3 FOR QUERY BEGIN
Matched In Binary Matching for sorted!!! mock-348
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-348"}
Matched In Absolute Custom Matching for sorted!!! mock-349
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-349"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-81[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	result	{"testcase id": "test-81", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:26Z 	[34mINFO[0m	starting test for of	{"test case": "test-82", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-91 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-97 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-140 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-148 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-160 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Handling Case 3 for mock mock-243
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-412 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-427
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-350
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-350"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-351
S_2
[[0 0 0 6]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-351
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-351"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-352
S_2
[[0 0 0 5]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-352
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-352"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-353
S_2
[[0 0 0 4]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-353
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-353"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-354
S_2
[[0 0 0 3]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-354
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-354"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-355
S_2
[[0 0 0 2]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-355
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-355"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-356
S_2
[[0 0 0 1]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-356
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-356"}
Matched In Absolute Custom Matching for sorted!!! mock-357
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-357"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-82[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	result	{"testcase id": "test-82", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	starting test for of	{"test case": "test-83", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-364
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-359
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-359"}
Matched In Absolute Custom Matching for sorted!!! mock-361
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-361"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-83[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	result	{"testcase id": "test-83", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	starting test for of	{"test case": "test-84", "test set": "test-set-5"}
Handling Case 1 for mock mock-364
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-364
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-364"}
----- []
----- [1 Dog]
SRC VALUES [[49] [68 111 103]]
----- []
----- [2 Cat]
SRC VALUES [[50] [67 97 116]]
----- []
----- [3 Roooster]
[70 138 40 178 215 171]
SRC VALUES [[51] [70 138 40 178 215 171]]
----- []
----- [4 Rabbit]
SRC VALUES [[52] [82 97 98 98 105 116]]
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_18} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_18} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_18} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_18} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_18} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-388
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-388"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-84[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-84                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|   [{"name":"Dog","id":1},{"name":"Cat","id":2},{"nam | [{"name":"Dog","id":1},{"name":"Cat","id":2},{"nam   |
|   e":"Roooster","id":3},{"name":"Rabbit","id":4}]    | e":"FÔøΩ(ÔøΩ◊´","id":3},{"name":"Rabbit","id":4}]         |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	result	{"testcase id": "test-84", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	starting test for of	{"test case": "test-85", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-364
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-365
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-365"}
Matched In Absolute Custom Matching for sorted!!! mock-388
üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-388"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-85[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:27Z 	[34mINFO[0m	result	{"testcase id": "test-85", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	starting test for of	{"test case": "test-86", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-86[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	result	{"testcase id": "test-86", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	starting test for of	{"test case": "test-87", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-368
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-368"}
Matched In Absolute Custom Matching for sorted!!! mock-369
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-369"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-87[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	result	{"testcase id": "test-87", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	starting test for of	{"test case": "test-88", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-370
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-370"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-371
S_10
[[0 0 0 4]]
[1]
[1 0]
Matched In Absolute Custom Matching for sorted!!! mock-371
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-371"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-372
S_11
[[0 0 0 4]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-372
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-372"}
Matched In Absolute Custom Matching for sorted!!! mock-373
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-373"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-88[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	result	{"testcase id": "test-88", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	starting test for of	{"test case": "test-89", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-375
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-375"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-376
S_2
[[0 0 0 4]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-376
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-376"}
Matched In Absolute Custom Matching for sorted!!! mock-377
üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-377"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-89[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:28Z 	[34mINFO[0m	result	{"testcase id": "test-89", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	starting test for of	{"test case": "test-90", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-378
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-378"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-379
S_10
[[0 0 0 4]]
[1]
[1 0]
Matched In Absolute Custom Matching for sorted!!! mock-379
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-379"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-380
S_11
[[0 0 0 4]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-380
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-380"}
Matched In Absolute Custom Matching for sorted!!! mock-381
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-381"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-90[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	result	{"testcase id": "test-90", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	starting test for of	{"test case": "test-91", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-91[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	result	{"testcase id": "test-91", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	starting test for of	{"test case": "test-92", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E P D B E] ClientRequest 249  { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [83 104 101 32 119 97 115 32 112 114 101 103 110 97 110 116 32 119 105 116 104 32 68 101 120 116 101 114 39 115 32 98 97 98 121] [0 0 0 4]] []} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [83 104 101 32 119 97 115 32 112 114 101 103 110 97 110 116 32 119 105 116 104 32 68 101 120 116 101 114 39 115 32 98 97 98 121] [0 0 0 4]] []}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING * [0 1043 23]} [{S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING * [0 1043 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E P D B E] ClientRequest 249  { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [83 104 101 32 119 97 115 32 112 114 101 103 110 97 110 116 32 119 105 116 104 32 68 101 120 116 101 114 39 115 32 98 97 98 121] [0 0 0 4]] []} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [83 104 101 32 119 97 115 32 112 114 101 103 110 97 110 116 32 119 105 116 104 32 68 101 120 116 101 114 39 115 32 98 97 98 121] [0 0 0 4]] []}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING * [0 1043 23]} [{S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING * [0 1043 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E P D B E] ClientRequest 249  { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [83 104 101 32 119 97 115 32 112 114 101 103 110 97 110 116 32 119 105 116 104 32 68 101 120 116 101 114 39 115 32 98 97 98 121] [0 0 0 4]] []} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [83 104 101 32 119 97 115 32 112 114 101 103 110 97 110 116 32 119 105 116 104 32 68 101 120 116 101 114 39 115 32 98 97 98 121] [0 0 0 4]] []}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING * [0 1043 23]} [{S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING * [0 1043 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E P D B E] ClientRequest 249  { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [83 104 101 32 119 97 115 32 112 114 101 103 110 97 110 116 32 119 105 116 104 32 68 101 120 116 101 114 39 115 32 98 97 98 121] [0 0 0 4]] []} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [83 104 101 32 119 97 115 32 112 114 101 103 110 97 110 116 32 119 105 116 104 32 68 101 120 116 101 114 39 115 32 98 97 98 121] [0 0 0 4]] []}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING * [0 1043 23]} [{S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING * [0 1043 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E P D B E] ClientRequest 249  { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [83 104 101 32 119 97 115 32 112 114 101 103 110 97 110 116 32 119 105 116 104 32 68 101 120 116 101 114 39 115 32 98 97 98 121] [0 0 0 4]] []} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [83 104 101 32 119 97 115 32 112 114 101 103 110 97 110 116 32 119 105 116 104 32 68 101 120 116 101 114 39 115 32 98 97 98 121] [0 0 0 4]] []}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING * [0 1043 23]} [{S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING * [0 1043 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-383
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-383"}
Matched In Absolute Custom Matching for sorted!!! mock-384
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-384"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-92[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	result	{"testcase id": "test-92", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	starting test for of	{"test case": "test-93", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-385
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-385"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-386
S_10
[[0 0 0 4]]
[1]
[1 0]
Matched In Absolute Custom Matching for sorted!!! mock-386
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-386"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-387
S_11
[[0 0 0 4]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-387
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-387"}
Matched In Absolute Custom Matching for sorted!!! mock-392
üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-392"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-93[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:29Z 	[34mINFO[0m	result	{"testcase id": "test-93", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	starting test for of	{"test case": "test-94", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-390
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-390 ***  15 [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]
datarow.RowValues 15
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 15
Difference in days from epoch: 6522.00 days
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAZeg=="}
datarow.RowValues 15
datarow.RowValues 15
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 15
datarow.RowValues 15
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 15
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 15
Difference in days from epoch: 7865.00 days
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAeuQ=="}
datarow.RowValues 15
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-390
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-390 ***  15 [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]
datarow.RowValues 15
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 15
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 15
datarow.RowValues 15
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 15
datarow.RowValues 15
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 15
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 15
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 15
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 98  { S_19 [1] [[0 0 0 4]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]} [{ S_5 [] [] []} { S_19 [1] [[0 0 0 4]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 98  { S_19 [1] [[0 0 0 4]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]} [{ S_5 [] [] []} { S_19 [1] [[0 0 0 4]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 98  { S_19 [1] [[0 0 0 4]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]} [{ S_5 [] [] []} { S_19 [1] [[0 0 0 4]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 98  { S_19 [1] [[0 0 0 4]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]} [{ S_5 [] [] []} { S_19 [1] [[0 0 0 4]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 98  { S_19 [1] [[0 0 0 4]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]} [{ S_5 [] [] []} { S_19 [1] [[0 0 0 4]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Handling Case 3 for mock mock-243
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-440
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-440"}
INFO  DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.HibernateException: Unable to extract JDBC value for position `2`
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.readCurrentRowValues(JdbcValuesResultSetImpl.java:271)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advance(JdbcValuesResultSetImpl.java:244)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:177)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:140)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:110)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:72)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4401)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4391)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:597)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:570)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:224)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:363)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:113)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:118)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1244)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1232)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:195)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:161)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:108)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:161)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2336)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2303)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:307)
	at jdk.proxy2/jdk.proxy2.$Proxy151.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:313)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:163)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy2/jdk.proxy2.$Proxy155.findById(Unknown Source)
	at org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetById(ClinicServiceImpl.java:239)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at org.springframework.samples.petclinic.service.ClinicServiceImpl$$SpringCGLIB$$0.findPetById(<generated>)
	at org.springframework.samples.petclinic.rest.controller.PetRestController.getPet(PetRestController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at org.springframework.samples.petclinic.rest.controller.PetRestController$$SpringCGLIB$$0.getPet(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: Unsupported binary encoding of date.
	at org.postgresql.jdbc.TimestampUtils.toDateBin(TimestampUtils.java:1051)
	at org.postgresql.jdbc.PgResultSet.getDate(PgResultSet.java:517)
	at org.postgresql.jdbc.PgResultSet.getDate(PgResultSet.java:2722)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.jdbc.DateJdbcType$2.doExtract(DateJdbcType.java:104)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.readCurrentRowValues(JdbcValuesResultSetImpl.java:263)
	... 206 common frames omitted
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_21 [] [] []} [{ S_21 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_21 ROLLBACK []} [{S_21 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_21 [] [] []} [{ S_21 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_21 ROLLBACK []} [{S_21 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_21 [] [] []} [{ S_21 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_21 ROLLBACK []} [{S_21 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_21 [] [] []} [{ S_21 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_21 ROLLBACK []} [{S_21 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_21 [] [] []} [{ S_21 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_21 ROLLBACK []} [{S_21 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-410
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-410"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-94[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-94                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT STATUS                    |                   ACTUAL STATUS                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                          200                         |                        400                           |
|                                                      |                                                      |
|                                                                                                             |
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                Keep-Alive: [timeout=60]              |                   Keep-Alive: []                     |
|                   Content-Length: []                 |               Content-Length: [122]                  |
|                Connection: [keep-alive]              |                   Connection: []                     |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "birthDate": "2017-11-09",                      | +  "className": "org.springframework.orm.jpa.JpaSy   |
|   -  "id": 4,                                        | stemException"                                       |
|   -  "name": "Mufasa",                               | +  "exMessage": "Unable to extract JDBC value for    |
|   -  "ownerId": 4,                                   | position `2`"                                        |
|   -  "type": {                                       |  }                                                   |
|   -    "id": 4,                                      |                                                      |
|   -    "name": "Rabbit"                              |                                                      |
|   -  },                                              |                                                      |
|   -  "visits": [                                     |                                                      |
|   -    : {                                           |                                                      |
|          "date": "2021-07-14",                       |                                                      |
|   -      "description": "She was pregnant with Dexte |                                                      |
|   r's baby",                                         |                                                      |
|   -      "id": 5,                                    |                                                      |
|   -      "petId": null                               |                                                      |
|   -    }                                             |                                                      |
|   -  ]                                               |                                                      |
|    }                                                 |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	result	{"testcase id": "test-94", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	starting test for of	{"test case": "test-95", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_21} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_21} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_21} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_21} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_21} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-394
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-394"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-395
S_10
[[0 0 0 4]]
[1]
[1 0]
Matched In Absolute Custom Matching for sorted!!! mock-395
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-395"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-396
S_11
[[0 0 0 4]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-396
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-396"}
Matched In Absolute Custom Matching for sorted!!! mock-397
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-397"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-95[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	result	{"testcase id": "test-95", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	starting test for of	{"test case": "test-96", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E D B E] ClientRequest 128  { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [70 111 114 32 118 97 99 99 105 110 97 116 105 111 110] [0 0 0 4]] [1 1 0 1]} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [70 111 114 32 118 97 99 99 105 110 97 116 105 111 110] [0 0 0 4]] [1 1 0 1]}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E D B E] ClientRequest 128  { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [70 111 114 32 118 97 99 99 105 110 97 116 105 111 110] [0 0 0 4]] [1 1 0 1]} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [70 111 114 32 118 97 99 99 105 110 97 116 105 111 110] [0 0 0 4]] [1 1 0 1]}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E D B E] ClientRequest 128  { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [70 111 114 32 118 97 99 99 105 110 97 116 105 111 110] [0 0 0 4]] [1 1 0 1]} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [70 111 114 32 118 97 99 99 105 110 97 116 105 111 110] [0 0 0 4]] [1 1 0 1]}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E D B E] ClientRequest 128  { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [70 111 114 32 118 97 99 99 105 110 97 116 105 111 110] [0 0 0 4]] [1 1 0 1]} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [70 111 114 32 118 97 99 99 105 110 97 116 105 111 110] [0 0 0 4]] [1 1 0 1]}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E D B E] ClientRequest 128  { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [70 111 114 32 118 97 99 99 105 110 97 116 105 111 110] [0 0 0 4]] [1 1 0 1]} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 49 45 48 55 45 49 52 32 43 48 48] [70 111 114 32 118 97 99 99 105 110 97 116 105 111 110] [0 0 0 4]] [1 1 0 1]}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-399
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-399"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-96[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-96                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT STATUS                    |                   ACTUAL STATUS                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                          201                         |                        400                           |
|                                                      |                                                      |
|                                                                                                             |
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                Keep-Alive: [timeout=60]              |                   Keep-Alive: []                     |
|               Location: [/api/visits/6]              |                    Location: []                      |
|                   Content-Length: []                 |                Content-Length: [65]                  |
|                Connection: [keep-alive]              |                   Connection: []                     |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "date": "2021-07-14",                           | +  "className": "java.util.NoSuchElementException"   |
|   -  "description": "For vaccination",               | +  "exMessage": null                                 |
|   -  "id": 6,                                        |  }                                                   |
|   -  "petId": 4                                      |                                                      |
|    }                                                 |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	result	{"testcase id": "test-96", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	starting test for of	{"test case": "test-97", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 4]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-401
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-401"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-402
S_10
[[0 0 0 4]]
[1]
[1 0]
Matched In Absolute Custom Matching for sorted!!! mock-402
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-402"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-403
S_11
[[0 0 0 4]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-403
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-403"}
Matched In Absolute Custom Matching for sorted!!! mock-404
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-404"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-97[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                               DIFFS TEST-97                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "id": 4,                                        |    "id": 4,                                          |
|      "pets": [                                       |    "pets": [                                         |
|        0: {                                          |      0: {                                            |
|          "id": 4,                                    |        "id": 4,                                      |
|          "name": "Mufasa",                           |        "name": "Mufasa",                             |
|          "ownerId": 4,                               |        "ownerId": 4,                                 |
|          "type": {                                   |        "type": {                                     |
|            "id": 4,                                  |          "id": 4,                                    |
|            "name": "Rabbit"                          |          "name": "Rabbit"                            |
|          },                                          |        },                                            |
|          "visits": [                                 |        "visits": [                                   |
|            1: {                                      |          1: {                                        |
|              "description": "She was pregnant with D |            "description": "She was pregnant with D   |
|   exter's baby",                                     | exter's baby",                                       |
|              "id": 5,                                |            "id": 5,                                  |
|              "petId": null                           |            "petId": null                             |
|            },                                        |          },                                          |
|          ]                                           |        ]                                             |
|        }                                             |      }                                               |
|      ],                                              |    ],                                                |
|    }                                                 |  }                                                   |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	result	{"testcase id": "test-97", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	starting test for of	{"test case": "test-98", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-98[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:30Z 	[34mINFO[0m	result	{"testcase id": "test-98", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	starting test for of	{"test case": "test-99", "test set": "test-set-5"}
Matched In Binary Matching for sorted!!! mock-406
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-406"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-407
S_11
[[0 0 0 4]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-407
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-407"}
Matched with the recorded prepared statement with Identifier and connectionID is S_3 , conn-  0 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-408
S_2
[[0 0 0 4]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-408
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-408"}
Matched In Binary Matching for sorted!!! mock-409
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-409"}
Matched In Absolute Custom Matching for sorted!!! mock-419
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-419"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-99[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	result	{"testcase id": "test-99", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	starting test for of	{"test case": "test-100", "test set": "test-set-5"}
Handling Case 3 for mock mock-412
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-412 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-412
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-412 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-91 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-97 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-140 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-148 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-160 ***  6 [1 0 0 0 0 0]
datarow.RowValues 6
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
datarow.RowValues 6
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 69  { S_6 [] [] [1 0 0 0 0 0]} [{ S_5 [] [] []} { S_6 [] [] [1 0 0 0 0 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Handling Case 3 for mock mock-243
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-427
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-215
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-215"}
Matched with the recorded prepared statement with Identifier and connectionID is S_4 , conn-  2 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-417
S_2
[[0 0 0 5]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-417
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-417"}
Matched with the recorded prepared statement with Identifier and connectionID is S_4 , conn-  2 and current identifier is S_2 FOR QUERY select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1
New Bind Prepared Statement [] for mock mock-418
S_2
[[0 0 0 4]]
[1]
[1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-418
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-418"}
Handling Case 2 for mock mock-413
Inside Prepared Statement
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-413 ***  10 [1 1 1 0 1 0 1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-413
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-413"}
Handling Case 2 for mock mock-414
Inside Prepared Statement
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-414 ***  10 [1 1 1 0 1 0 1 1 1 0]
datarow.RowValues 10
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 10
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 10
Difference in days from epoch: 8784.00 days
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAiUA=="}
datarow.RowValues 10
datarow.RowValues 10
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 10
datarow.RowValues 10
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 10
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 10
Difference in days from epoch: 8817.00 days
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAicQ=="}
datarow.RowValues 10
Matched In Absolute Custom Matching for sorted!!! mock-414
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-414"}
----- []
----- [AAAABQ== AAAAAw== AAAiUA== Darwin AAAAAw== Roooster AAAAAw== AAAABA== AAAicQ== Petrol Slips for this financial year ]
[0 0 0 5]
[0 0 0 3]
[0 0 34 80]
[0 0 0 3]
[70 138 40 178 215 171]
[0 0 0 3]
[0 0 0 4]
[0 0 34 113]
SRC VALUES [[0 0 0 5] [0 0 0 3] [0 0 34 80] [68 97 114 119 105 110] [0 0 0 3] [70 138 40 178 215 171] [0 0 0 3] [0 0 0 4] [0 0 34 113] [80 101 116 114 111 108 32 83 108 105 112 115 32 102 111 114 32 116 104 105 115 32 102 105 110 97 110 99 105 97 108 32 121 101 97 114 32]]
Matched In Absolute Custom Matching for sorted!!! mock-423
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-423"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-100[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                              DIFFS TEST-100                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|   [{"firstName":"SARTHAK","lastName":"Shyngle","addr | [{"firstName":"SARTHAK","lastName":"Shyngle","addr   |
|   ess":"Sector-2 , Opposite Manipal Hospital, Dwarka | ess":"Sector-2 , Opposite Manipal Hospital, Dwarka   |
|   ","city":"New Delhi","telephone":"9958178959","id" | ","city":"New Delhi","telephone":"9958178959","id"   |
|   :1,"pets":[{"name":"Dexter","birthDate":"2021-07-0 | :1,"pets":[{"name":"Dexter","birthDate":"2021-07-0   |
|   7","type":{"name":"Dog","id":1},"id":1,"ownerId":1 | 7","type":{"name":"Dog","id":1},"id":1,"ownerId":1   |
|   ,"visits":[{"date":"2024-01-17","description":"For | ,"visits":[{"date":"2024-01-17","description":"For   |
|    vaccination","id":1,"petId":null},{"date":"2021-0 |  vaccination","id":1,"petId":null},{"date":"2021-0   |
|   7-14","description":"Visited for ear pain","id":2, | 7-14","description":"Visited for ear pain","id":2,   |
|   "petId":null}]}]},{"firstName":"Shiksha","lastName | "petId":null}]}]},{"firstName":"Shiksha","lastName   |
|   ":"Shyngle","address":"Sector-2 , Opposite Manipal | ":"Shyngle","address":"Sector-2 , Opposite Manipal   |
|    Hospital, Dwarka","city":"New Delhi","telephone": |  Hospital, Dwarka","city":"New Delhi","telephone":   |
|   "9958178959","id":2,"pets":[]},{"firstName":"Shubh | "9958178959","id":2,"pets":[]},{"firstName":"Shubh   |
|   am","lastName":"Jain","address":"HNO A -504 SECTOR | am","lastName":"Jain","address":"HNO A -504 SECTOR   |
|   -2 ANMOL APPTT","city":"Bangalore","telephone":"99 | -2 ANMOL APPTT","city":"Bangalore","telephone":"99   |
|   58178923","id":3,"pets":[{"name":"Sweetiee","birth | 58178923","id":3,"pets":[]},{"firstName":"Ritik","   |
|   Date":"2018-07-04","type":{"name":"Cat","id":2},"i | lastName":"Jain","address":"Sector-2 , Opposite Ma   |
|   d":2,"ownerId":3,"visits":[{"date":"2024-01-17","d | nipal Hospital, Dwarka","city":"Karnataka","teleph   |
|   escription":"Dont know","id":3,"petId":null}]}]},{ | one":"9958178959","id":4,"pets":[]},{"firstName":"   |
|   "firstName":"Ritik","lastName":"Jain","address":"S | Gourav","lastName":"Kumar","address":"Aecs layout,   |
|   ector-2 , Opposite Manipal Hospital, Dwarka","city |  Singasandra ","city":"NEW DELHI","telephone":"995   |
|   ":"Karnataka","telephone":"9958178959","id":4,"pet | 8178959","id":5,"pets":[]}]                          |
|   s":[{"name":"Mufasa","birthDate":"2017-11-09","typ |                                                      |
|   e":{"name":"Rabbit","id":4},"id":4,"ownerId":4,"vi |                                                      |
|   sits":[{"date":"2021-07-14","description":"For vac |                                                      |
|   cination","id":6,"petId":null}]}]},{"firstName":"G |                                                      |
|   ourav","lastName":"Kumar","address":"Aecs layout,  |                                                      |
|   Singasandra ","city":"NEW DELHI","telephone":"9958 |                                                      |
|   178959","id":5,"pets":[{"name":"Darwin","birthDate |                                                      |
|   ":"2024-01-19","type":{"name":"Roooster","id":3}," |                                                      |
|   id":3,"ownerId":5,"visits":[{"date":"2024-02-21"," |                                                      |
|   description":"Petrol Slips for this financial year |                                                      |
|    ","id":4,"petId":null}]}]},{"firstName":"Charan", |                                                      |
|   "lastName":"Kamarapu","address":"Sector-2 , Opposi |                                                      |
|   te Manipal Hospital, Dwarka","city":"Hyderabad","t |                                                      |
|   elephone":"9958178959","id":6,"pets":[]}]          |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	result	{"testcase id": "test-100", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	starting test for of	{"test case": "test-101", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-440
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-440"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-235
S_10
[[0 0 0 1]]
[1]
[1 0]
Matched In Absolute Custom Matching for Unsorted mock-235
üê∞ Keploy: 2024-02-15T22:42:31Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-235"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-236
S_11
[[0 0 0 5]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for Unsorted mock-236
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-236"}
Matched In Absolute Custom Matching for sorted!!! mock-422
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-422"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-101[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                              DIFFS TEST-101                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "id": 6,                                        |    "id": 6,                                          |
|      "pets": [                                       |    "pets": [                                         |
|      ],                                              | +    0: {                                            |
|    }                                                 |        "birthDate": "2024-01-19",                    |
|                                                      | +      "id": 5,                                      |
|                                                      | +      "name": "Dog Beagle",                         |
|                                                      | +      "ownerId": 6,                                 |
|                                                      | +      "type": {                                     |
|                                                      | +        "id": 1,                                    |
|                                                      | +        "name": "Cat"                               |
|                                                      | +      },                                            |
|                                                      | +      "visits": [                                   |
|                                                      | +      ]                                             |
|                                                      | +    }                                               |
|                                                      |    ],                                                |
|                                                      |  }                                                   |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	result	{"testcase id": "test-101", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	starting test for of	{"test case": "test-102", "test set": "test-set-5"}
Handling Case 1 for mock mock-427
Inside Slice Command Tag for  1
Matched In Absolute Custom Matching for sorted!!! mock-427
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-427"}
----- []
----- [6 Sector-2 , Opposite Manipal Hospital, Dwarka Hyderabad Charan Kamarapu      9958178959]
[41 169 154 173 170 110]
[]
[]
[]
[]
[]
SRC VALUES [[54] [83 101 99 116 111 114 45 50 32 44 32 79 112 112 111 115 105 116 101 32 77 97 110 105 112 97 108 32 72 111 115 112 105 116 97 108 44 32 68 119 97 114 107 97] [72 121 100 101 114 97 98 97 100] [67 104 97 114 97 110] [41 169 154 173 170 110] [] [] [] [] [] [57 57 53 56 49 55 56 57 53 57]]
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_22} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_22} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_22} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_22} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[C B E] ClientRequest 42  { S_1 [] [] []} [{ S_1 [] [] []}] {0 0} {83 S_22} {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-428
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-428"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-102[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                              DIFFS TEST-102                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|   [{"name":"Dog","id":1},{"name":"Cat","id":2},{"nam | [{"name":"Sector-2 , Opposite Manipal Hospital, Dw   |
|   e":"Roooster","id":3},{"name":"Rabbit","id":4}]    | arka","id":6}]                                       |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	result	{"testcase id": "test-102", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	starting test for of	{"test case": "test-103", "test set": "test-set-5"}
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-440
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-440"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-235
S_10
[[0 0 0 1]]
[1]
[1 0]
Matched In Absolute Custom Matching for Unsorted mock-235
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-235"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-236
S_11
[[0 0 0 5]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for Unsorted mock-236
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-236"}
Matched In Absolute Custom Matching for sorted!!! mock-428
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-428"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-103[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                              DIFFS TEST-103                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "id": 6,                                        |    "id": 6,                                          |
|      "pets": [                                       |    "pets": [                                         |
|      ],                                              | +    0: {                                            |
|    }                                                 |        "birthDate": "2024-01-19",                    |
|                                                      | +      "id": 5,                                      |
|                                                      | +      "name": "Dog Beagle",                         |
|                                                      | +      "ownerId": 6,                                 |
|                                                      | +      "type": {                                     |
|                                                      | +        "id": 1,                                    |
|                                                      | +        "name": "Cat"                               |
|                                                      | +      },                                            |
|                                                      | +      "visits": [                                   |
|                                                      | +      ]                                             |
|                                                      | +    }                                               |
|                                                      |    ],                                                |
|                                                      |  }                                                   |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:32Z 	[34mINFO[0m	result	{"testcase id": "test-103", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	starting test for of	{"test case": "test-104", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-104[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	result	{"testcase id": "test-104", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	starting test for of	{"test case": "test-105", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E P D B E] ClientRequest 244  { S_23 [0 0 1 1] [[50 48 50 52 45 48 49 45 49 57 32 43 48 48] [68 111 103 32 66 101 97 103 108 101] [0 0 0 6] [0 0 0 1]] []} [{ S_3 [] [] []} { S_23 [0 0 1 1] [[50 48 50 52 45 48 49 45 49 57 32 43 48 48] [68 111 103 32 66 101 97 103 108 101] [0 0 0 6] [0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {83 S_23} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]} [{S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E P D B E] ClientRequest 244  { S_23 [0 0 1 1] [[50 48 50 52 45 48 49 45 49 57 32 43 48 48] [68 111 103 32 66 101 97 103 108 101] [0 0 0 6] [0 0 0 1]] []} [{ S_3 [] [] []} { S_23 [0 0 1 1] [[50 48 50 52 45 48 49 45 49 57 32 43 48 48] [68 111 103 32 66 101 97 103 108 101] [0 0 0 6] [0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {83 S_23} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]} [{S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E P D B E] ClientRequest 244  { S_23 [0 0 1 1] [[50 48 50 52 45 48 49 45 49 57 32 43 48 48] [68 111 103 32 66 101 97 103 108 101] [0 0 0 6] [0 0 0 1]] []} [{ S_3 [] [] []} { S_23 [0 0 1 1] [[50 48 50 52 45 48 49 45 49 57 32 43 48 48] [68 111 103 32 66 101 97 103 108 101] [0 0 0 6] [0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {83 S_23} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]} [{S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E P D B E] ClientRequest 244  { S_23 [0 0 1 1] [[50 48 50 52 45 48 49 45 49 57 32 43 48 48] [68 111 103 32 66 101 97 103 108 101] [0 0 0 6] [0 0 0 1]] []} [{ S_3 [] [] []} { S_23 [0 0 1 1] [[50 48 50 52 45 48 49 45 49 57 32 43 48 48] [68 111 103 32 66 101 97 103 108 101] [0 0 0 6] [0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {83 S_23} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]} [{S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E P D B E] ClientRequest 244  { S_23 [0 0 1 1] [[50 48 50 52 45 48 49 45 49 57 32 43 48 48] [68 111 103 32 66 101 97 103 108 101] [0 0 0 6] [0 0 0 1]] []} [{ S_3 [] [] []} { S_23 [0 0 1 1] [[50 48 50 52 45 48 49 45 49 57 32 43 48 48] [68 111 103 32 66 101 97 103 108 101] [0 0 0 6] [0 0 0 1]] []}] {0 0} {0 } {} {[]} {} {83 S_23} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]} [{S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING * [0 1043 23 23]}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-430
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-430"}
Matched In Absolute Custom Matching for sorted!!! mock-431
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-431"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-105[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	result	{"testcase id": "test-105", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	starting test for of	{"test case": "test-106", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-440
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-440"}
Matched with the recorded prepared statement with Identifier and connectionID is S_9 , conn-  0 and current identifier is S_10 FOR QUERY select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1
New Bind Prepared Statement [] for mock mock-433
S_10
[[0 0 0 1]]
[1]
[1 0]
Matched In Absolute Custom Matching for sorted!!! mock-433
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-433"}
Matched with the recorded prepared statement with Identifier and connectionID is S_10 , conn-  0 and current identifier is S_11 FOR QUERY select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1
New Bind Prepared Statement [] for mock mock-434
S_11
[[0 0 0 5]]
[1]
[1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-434
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-434"}
Matched In Absolute Custom Matching for sorted!!! mock-446
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-446"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-106[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	result	{"testcase id": "test-106", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	starting test for of	{"test case": "test-107", "test set": "test-set-5"}
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 98  { S_19 [1] [[0 0 0 5]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]} [{ S_5 [] [] []} { S_19 [1] [[0 0 0 5]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 98  { S_19 [1] [[0 0 0 5]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]} [{ S_5 [] [] []} { S_19 [1] [[0 0 0 5]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 98  { S_19 [1] [[0 0 0 5]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]} [{ S_5 [] [] []} { S_19 [1] [[0 0 0 5]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 98  { S_19 [1] [[0 0 0 5]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]} [{ S_5 [] [] []} { S_19 [1] [[0 0 0 5]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 98  { S_19 [1] [[0 0 0 5]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]} [{ S_5 [] [] []} { S_19 [1] [[0 0 0 5]] [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Handling Case 3 for mock mock-243
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-390 ***  15 [1 1 0 1 0 0 0 0 0 1 0 1 1 1 0]
datarow.RowValues 15
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 15
Difference in days from epoch: 6522.00 days
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAZeg=="}
datarow.RowValues 15
datarow.RowValues 15
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
datarow.RowValues 15
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 15
datarow.RowValues 15
Integer Input: 4
Integer: 4
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABA=="}
datarow.RowValues 15
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 15
Difference in days from epoch: 7865.00 days
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAeuQ=="}
datarow.RowValues 15
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-440
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-440"}
INFO  DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.HibernateException: Unable to extract JDBC value for position `2`
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.readCurrentRowValues(JdbcValuesResultSetImpl.java:271)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advance(JdbcValuesResultSetImpl.java:244)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:85)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:29)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:88)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:177)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:443)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:166)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:140)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:110)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:72)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4401)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4391)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:597)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:570)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:224)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:363)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:113)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:118)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1244)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1232)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:195)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:161)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:108)
	at org.hibernate.loader.access.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:161)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2336)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2303)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:307)
	at jdk.proxy2/jdk.proxy2.$Proxy151.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:313)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:163)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy2/jdk.proxy2.$Proxy155.findById(Unknown Source)
	at org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetById(ClinicServiceImpl.java:239)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at org.springframework.samples.petclinic.service.ClinicServiceImpl$$SpringCGLIB$$0.findPetById(<generated>)
	at org.springframework.samples.petclinic.rest.controller.PetRestController.getPet(PetRestController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:752)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at org.springframework.samples.petclinic.rest.controller.PetRestController$$SpringCGLIB$$0.getPet(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:705)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:399)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:297)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:79)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:125)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:173)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:186)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:280)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:170)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:134)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:351)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: Unsupported binary encoding of date.
	at org.postgresql.jdbc.TimestampUtils.toDateBin(TimestampUtils.java:1051)
	at org.postgresql.jdbc.PgResultSet.getDate(PgResultSet.java:517)
	at org.postgresql.jdbc.PgResultSet.getDate(PgResultSet.java:2722)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.jdbc.DateJdbcType$2.doExtract(DateJdbcType.java:104)
	at org.hibernate.type.descriptor.jdbc.BasicExtractor.extract(BasicExtractor.java:44)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.readCurrentRowValues(JdbcValuesResultSetImpl.java:263)
	... 206 common frames omitted
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_24 [] [] []} [{ S_24 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_24 ROLLBACK []} [{S_24 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_24 [] [] []} [{ S_24 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_24 ROLLBACK []} [{S_24 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_24 [] [] []} [{ S_24 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_24 ROLLBACK []} [{S_24 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_24 [] [] []} [{ S_24 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_24 ROLLBACK []} [{S_24 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[P B E] ClientRequest 53  { S_24 [] [] []} [{ S_24 [] [] []}] {0 0} {0 } {} {[]} {} {0 } { 1} [{ 1}] {} {0 [] [] 0} {} {S_24 ROLLBACK []} [{S_24 ROLLBACK []}] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-436
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-436"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-107[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                              DIFFS TEST-107                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT STATUS                    |                   ACTUAL STATUS                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                          200                         |                        400                           |
|                                                      |                                                      |
|                                                                                                             |
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                   Content-Length: []                 |               Content-Length: [122]                  |
|                Keep-Alive: [timeout=60]              |                   Keep-Alive: []                     |
|                Connection: [keep-alive]              |                   Connection: []                     |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "birthDate": "2024-01-19",                      | +  "className": "org.springframework.orm.jpa.JpaSy   |
|   -  "id": 5,                                        | stemException"                                       |
|   -  "name": "Dog Beagle",                           | +  "exMessage": "Unable to extract JDBC value for    |
|   -  "ownerId": 6,                                   | position `2`"                                        |
|   -  "type": {                                       |  }                                                   |
|   -    "id": 1,                                      |                                                      |
|   -    "name": "Dog"                                 |                                                      |
|   -  },                                              |                                                      |
|   -  "visits": [                                     |                                                      |
|   -  ]                                               |                                                      |
|    }                                                 |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:33Z 	[34mINFO[0m	result	{"testcase id": "test-107", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	starting test for of	{"test case": "test-108", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_24} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_24} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_24} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_24} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[C B E B E] ClientRequest 100  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {83 S_24} {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-440
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-440"}
Handling Case 2 for mock mock-441
Inside Prepared Statement
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-441 ***  2 [1 0]
datarow.RowValues 2
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 2
Matched In Absolute Custom Matching for sorted!!! mock-441
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-441"}
----- []
----- [AAAAAQ== Dog]
[0 0 0 1]
SRC VALUES [[0 0 0 1] [68 111 103]]
Handling Case 2 for mock mock-442
Inside Prepared Statement
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-442 ***  4 [1 1 1 0]
Matched In Absolute Custom Matching for sorted!!! mock-442
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-442"}
Matched In Absolute Custom Matching for sorted!!! mock-443
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-443"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-108[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	result	{"testcase id": "test-108", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	starting test for of	{"test case": "test-109", "test set": "test-set-5"}
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-109[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	result	{"testcase id": "test-109", "testset id": "test-set-5", "passed": "true"}
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	starting test for of	{"test case": "test-110", "test set": "test-set-5"}
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[B E D B E] ClientRequest 122  { S_20 [0 0 1] [[50 48 50 52 45 48 50 45 50 49 32 43 48 48] [68 111 110 116 32 107 110 111 119] [0 0 0 5]] [1 1 0 1]} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 52 45 48 50 45 50 49 32 43 48 48] [68 111 110 116 32 107 110 111 119] [0 0 0 5]] [1 1 0 1]}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[B E D B E] ClientRequest 122  { S_20 [0 0 1] [[50 48 50 52 45 48 50 45 50 49 32 43 48 48] [68 111 110 116 32 107 110 111 119] [0 0 0 5]] [1 1 0 1]} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 52 45 48 50 45 50 49 32 43 48 48] [68 111 110 116 32 107 110 111 119] [0 0 0 5]] [1 1 0 1]}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[B E D B E] ClientRequest 122  { S_20 [0 0 1] [[50 48 50 52 45 48 50 45 50 49 32 43 48 48] [68 111 110 116 32 107 110 111 119] [0 0 0 5]] [1 1 0 1]} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 52 45 48 50 45 50 49 32 43 48 48] [68 111 110 116 32 107 110 111 119] [0 0 0 5]] [1 1 0 1]}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[B E D B E] ClientRequest 122  { S_20 [0 0 1] [[50 48 50 52 45 48 50 45 50 49 32 43 48 48] [68 111 110 116 32 107 110 111 119] [0 0 0 5]] [1 1 0 1]} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 52 45 48 50 45 50 49 32 43 48 48] [68 111 110 116 32 107 110 111 119] [0 0 0 5]] [1 1 0 1]}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[B E D B E] ClientRequest 122  { S_20 [0 0 1] [[50 48 50 52 45 48 50 45 50 49 32 43 48 48] [68 111 110 116 32 107 110 111 119] [0 0 0 5]] [1 1 0 1]} [{ S_3 [] [] []} { S_20 [0 0 1] [[50 48 50 52 45 48 50 45 50 49 32 43 48 48] [68 111 110 116 32 107 110 111 119] [0 0 0 5]] [1 1 0 1]}] {0 0} {0 } {} {[]} {} {83 S_20} { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Matched In Binary Matching for Unsorted mock-445
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-445"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-110[0m[31m[1m"[0m

--------------------------------------------------------------------

+-------------------------------------------------------------------------------------------------------------+
| [91m                                              DIFFS TEST-110                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT STATUS                    |                   ACTUAL STATUS                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                          201                         |                        400                           |
|                                                      |                                                      |
|                                                                                                             |
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                Connection: [keep-alive]              |                   Connection: []                     |
|                Keep-Alive: [timeout=60]              |                   Keep-Alive: []                     |
|               Location: [/api/visits/7]              |                    Location: []                      |
|                   Content-Length: []                 |                Content-Length: [65]                  |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "date": "2024-02-21",                           | +  "className": "java.util.NoSuchElementException"   |
|   -  "description": "Dont know",                     | +  "exMessage": null                                 |
|   -  "id": 7,                                        |  }                                                   |
|   -  "petId": 5                                      |                                                      |
|    }                                                 |                                                      |
|                                                      |                                                      |
|                                                                                                             |
+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	result	{"testcase id": "test-110", "testset id": "test-set-5", "passed": "false"}
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	starting test for of	{"test case": "test-111", "test set": "test-set-5"}
Testrun failed for testcase with id: [31m[1m"[0m[31mtest-111[0m[31m[1m"[0m

--------------------------------------------------------------------

Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
+-------------------------------------------------------------------------------------------------------------+
| [91m                                              DIFFS TEST-111                                               [0m |
+-------------------------------------------------------------------------------------------------------------+
|                     EXPECT STATUS                    |                   ACTUAL STATUS                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                          200                         |                        400                           |
|                                                      |                                                      |
|                                                                                                             |
|                     EXPECT HEADER                    |                   ACTUAL HEADER                      |
| -----------------------------------------------------+----------------------------------------------------- |
|                Connection: [keep-alive]              |                   Connection: []                     |
|                Keep-Alive: [timeout=60]              |                   Keep-Alive: []                     |
|                   Content-Length: []                 |                Content-Length: [65]                  |
|                                                      |                                                      |
|                                                                                                             |
|                      EXPECT BODY                     |                    ACTUAL BODY                       |
| -----------------------------------------------------+----------------------------------------------------- |
|    {                                                 |  {                                                   |
|      "address": "Sector-2 , Opposite Manipal Hospita | +  "className": "java.util.NoSuchElementException"   |
|   l, Dwarka",                                        | +  "exMessage": null                                 |
|      "city": "Hyderabad",                            |  }                                                   |
|      "firstName": "Charan",                          |                                                      |
|   -  "id": 6,                                        |                                                      |
|      "lastName": "Kamarapu",                         |                                                      |
|   -  "pets": [                                       |                                                      |
|   -    : {                                           |                                                      |
|          "birthDate": "2024-01-19",                  |                                                      |
|   -      "id": 5,                                    |                                                      |
|   -      "name": "Dog Beagle",                       |                                                      |
|   -      "ownerId": 6,                               |                                                      |
|   -      "type": {                                   |                                                      |
|   -        "id": 1,                                  |                                                      |
|   -        "name": "Dog"                             |                                                      |
|   -      },                                          |                                                      |
|   -      "visits": [                                 |                                                      |
|   -        : {                                       |                                                      |
|              "date": "2024-02-21",                   |                                                      |
|   -          "description": "Dont know",             |                                                      |
|   -          "id": 7,                                |                                                      |
|   -          "petId": null                           |                                                      |
|   -        }                                         |                                                      |
|   -      ]                                           |                                                      |
|   -    }                                             |                                                      |
|   -  ],                                              |                                                      |
|      "telephone": "9958178959"                       |                                                      |
|    }                                                 |                                                      |
|                                                      |                                                      |
|                                                                                                             |Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY

+-------------------------------------------------------------------------------------------------------------+
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	result	{"testcase id": "test-111", "testset id": "test-set-5", "passed": "false"}
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_6 , conn-  0 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Matched with the recorded prepared statement with Identifier and connectionID is S_5 , conn-  2 and current identifier is S_5 FOR QUERY BEGIN READ ONLY
Handling Case 3 for mock mock-89
Handling Case 3 for mock mock-91
Handling Case 3 for mock mock-95
Handling Case 3 for mock mock-97
Handling Case 3 for mock mock-102
Handling Case 3 for mock mock-105
Handling Case 3 for mock mock-107
Handling Case 3 for mock mock-111
Handling Case 3 for mock mock-114
Handling Case 3 for mock mock-117
Handling Case 3 for mock mock-120
Handling Case 3 for mock mock-123
Handling Case 3 for mock mock-126
Handling Case 3 for mock mock-129
Handling Case 3 for mock mock-132
Handling Case 3 for mock mock-135
Handling Case 3 for mock mock-138
Handling Case 3 for mock mock-140
Handling Case 3 for mock mock-146
Handling Case 3 for mock mock-148
Handling Case 3 for mock mock-155
Handling Case 3 for mock mock-158
Handling Case 3 for mock mock-160
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-174 WITH CONN ID 0
Handling Case 3 for mock mock-174
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-174 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 1
Integer: 1
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-175 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-176 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-177 WITH CONN ID 0
TEST prep map map[0:[{S_1 COMMIT} {S_2 select p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.owner_id=$1} {S_3 BEGIN} {S_4 insert into owners (address, city, first_name, last_name, telephone) values ($1, $2, $3, $4, $5) RETURNING *} {S_5 BEGIN READ ONLY} {S_6 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone from owners o1_0} {S_7 ROLLBACK} {S_8 ROLLBACK} {S_9 select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=$1} {S_10 select p1_0.id,p1_0.name from types p1_0 where p1_0.id=$1} {S_11 select v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from visits v1_0 where v1_0.pet_id=$1} {S_12 ROLLBACK} {S_13 ROLLBACK} {S_14 ROLLBACK} {S_15 select s1_0.vet_id,s1_1.id,s1_1.name from vet_specialties s1_0 join specialties s1_1 on s1_1.id=s1_0.specialty_id where s1_0.vet_id=$1} {S_16 select s1_0.id,s1_0.name from specialties s1_0} {S_17 select v1_0.id,v1_0.first_name,v1_0.last_name from vets v1_0} {S_18 select p1_0.id,p1_0.name from types p1_0} {S_19 select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name,v1_0.pet_id,v1_0.id,v1_0.visit_date,v1_0.description from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id left join visits v1_0 on p1_0.id=v1_0.pet_id where p1_0.id=$1} {S_20 insert into visits (visit_date, description, pet_id) values ($1, $2, $3) RETURNING *} {S_21 ROLLBACK} {S_22 select p1_0.id,p1_0.name from types p1_0} {S_23 insert into pets (birth_date, name, owner_id, type_id) values ($1, $2, $3, $4) RETURNING *} {S_24 ROLLBACK}]]
Inside Compare Exact Match &{[B E B E] ClientRequest 89  { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]} [{ S_5 [] [] []} { S_9 [1] [[0 0 0 6]] [1 0 0 0 0 1 1 1 0 1 0]}] {0 0} {0 } {} {[]} {} {0 } { 0} [{ 0} { 0}] {} {0 [] [] 0} {} {  []} [] {} {false} {0 map[]} {} {} { []} {[]} {} 69 false 0 0} MOCK NAME -  mock-178 WITH CONN ID 0
Handling Case 3 for mock mock-192
Handling Case 3 for mock mock-229
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-229 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-243
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-243 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 3
Integer: 3
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAw=="}
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Difference in days from epoch: 6759.00 days
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAaZw=="}
datarow.RowValues 11
datarow.RowValues 11
Integer Input: 2
Integer: 2
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAg=="}
datarow.RowValues 11
Handling Case 3 for mock mock-248
Handling Case 3 for mock mock-270
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-270 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 5
Integer: 5
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABQ=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-288
Handling Case 3 for mock mock-296
Handling Case 3 for mock mock-310
Handling Case 3 for mock mock-313
Handling Case 3 for mock mock-315
Handling Case 3 for mock mock-332
Handling Case 3 for mock mock-343
Handling Case 3 for mock mock-364
Handling Case 3 for mock mock-390
Handling Case 3 for mock mock-412
Handling Case 3 for mock mock-427
Inside Slice Command Tag for  2
Result Format Codes for mock  mock-427 ***  11 [1 0 0 0 0 1 1 1 0 1 0]
datarow.RowValues 11
Integer Input: 6
Integer: 6
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAABg=="}
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
datarow.RowValues 11
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	New Row Value	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "new_row": "AAAAAA=="}
datarow.RowValues 11
Handling Case 3 for mock mock-445
Matched In Binary Matching for Unsorted mock-440
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	Matched mock	{"Client IP Address": "[::1]:49238", "Client ConnectionID": 2, "Destination ConnectionID": 3, "mock": "mock-440"}
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	test report for test-set-5: 	{"name: ": "report-1", "path: ": "/Users/sarthak_1/Documents/Keploy/v2/keploy/keploy/report-1"}

 <=========================================> 
  TESTRUN SUMMARY. For testrun with id: [31m[1m"[0m[31mtest-set-5[0m[31m[1m"[0m
	Total tests: [34m[1m111[0m
	Total test passed: [34m[1m87[0m
	Total test failed: [34m[1m24[0m
 <=========================================> 

üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	keploy has initiated the shutdown of the user application.
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	test run completed	{"passed overall": false}
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	Exiting keploy program gracefully.
üê∞ Keploy: 2024-02-15T22:42:34Z 	[34mINFO[0m	keploy terminated user application
INFO  LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  HikariDataSource - HikariPool-1 - Shutdown initiated...
INFO  HikariDataSource - HikariPool-1 - Shutdown completed.
üê∞ Keploy: 2024-02-15T22:42:35Z 	[34mINFO[0m	eBPF resources released successfully...
üê∞ Keploy: 2024-02-15T22:42:35Z 	[34mINFO[0m	Dns server stopped
üê∞ Keploy: 2024-02-15T22:42:35Z 	[34mINFO[0m	proxy stopped...
